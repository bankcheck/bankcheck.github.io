// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFAX wrapper class

class CFAX : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFAX)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x2e980303, 0xc865, 0x11cf, { 0xba, 0x24, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetFaxFileName();
	void SetFaxFileName(LPCTSTR);
	CString GetLocalID();
	void SetLocalID(LPCTSTR);
	short GetRings();
	void SetRings(short);
	BOOL GetToneDial();
	void SetToneDial(BOOL);
	CString GetPageFileName();
	void SetPageFileName(LPCTSTR);
	long GetFaxError();
	void SetFaxError(long);
	CString GetFaxType();
	void SetFaxType(LPCTSTR);
	CString GetAvailablePorts();
	void SetAvailablePorts(LPCTSTR);
	CString GetBrooktroutCFile();
	void SetBrooktroutCFile(LPCTSTR);
	CString GetGammaCFile();
	void SetGammaCFile(LPCTSTR);
	CString GetAvailableBrooktroutChannels();
	void SetAvailableBrooktroutChannels(LPCTSTR);
	CString GetAvailableGammaChannels();
	void SetAvailableGammaChannels(LPCTSTR);
	CString GetPortsOpen();
	void SetPortsOpen(LPCTSTR);
	CString GetBrooktroutChannelsOpen();
	void SetBrooktroutChannelsOpen(LPCTSTR);
	CString GetGammaChannelsOpen();
	void SetGammaChannelsOpen(LPCTSTR);
	long GetHDIB();
	void SetHDIB(long);
	BOOL GetHeader();
	void SetHeader(BOOL);
	long GetFaxCppVersion();
	void SetFaxCppVersion(long);
	CString GetClassType();
	void SetClassType(LPCTSTR);
	CString GetManufacturer();
	void SetManufacturer(LPCTSTR);
	CString GetModel();
	void SetModel(LPCTSTR);
	long GetSpeakerMode();
	void SetSpeakerMode(long);
	long GetSpeakerVolume();
	void SetSpeakerVolume(long);
	CString GetHeaderLeft();
	void SetHeaderLeft(LPCTSTR);
	CString GetHeaderCenter();
	void SetHeaderCenter(LPCTSTR);
	CString GetHeaderRight();
	void SetHeaderRight(LPCTSTR);
	CString GetAvailableDialogicChannels();
	void SetAvailableDialogicChannels(LPCTSTR);
	CString GetDialogicChannelsOpen();
	void SetDialogicChannelsOpen(LPCTSTR);
	CString GetAvailableBicomChannels();
	void SetAvailableBicomChannels(LPCTSTR);
	CString GetBicomChannelsOpen();
	void SetBicomChannelsOpen(LPCTSTR);
	CString GetAvailableCmtrxChannels();
	void SetAvailableCmtrxChannels(LPCTSTR);
	long GetHeaderHeight();
	void SetHeaderHeight(long);
	CString GetCmtrxChannelsOpen();
	void SetCmtrxChannelsOpen(LPCTSTR);
	CString GetHeaderFaceName();
	void SetHeaderFaceName(LPCTSTR);
	long GetHeaderFontSize();
	void SetHeaderFontSize(long);
	BOOL GetGammaCfgNeeded();
	void SetGammaCfgNeeded(BOOL);
	CString GetAvailableNMSChannels();
	void SetAvailableNMSChannels(LPCTSTR);
	CString GetNMSChannelsOpen();
	void SetNMSChannelsOpen(LPCTSTR);
	CString GetNMSProtocoll();
	void SetNMSProtocoll(LPCTSTR);
	BOOL GetDisplayFaxManager();
	void SetDisplayFaxManager(BOOL);
	long GetNMSDNISDigitNum();
	void SetNMSDNISDigitNum(long);

// Operations
public:
	long ClearFaxObject(long FaxID);
	long GetFaxPage(long FaxID, short PageNum, short Type, BOOL bAppend);
	long SetFaxPage(long FaxID, short PageNum, short Type, short ImageNum);
	long SendFaxObj(long FaxID);
	long CreateFaxObject(short Type, short PageNum, short Resolution, short Width, short Length, short Compression, short Binary, short Ecm, short ColorFax, short ColorType);
	long SetPortCapability(LPCTSTR Port, short Capability, short Data);
	short GetPortCapability(LPCTSTR Port, short Capability);
	long EnableLog(LPCTSTR Port, BOOL bEnable);
	void SetLogDir(LPCTSTR lpszLogDir);
	void SetFaxObjDir(LPCTSTR lpszFaxDir);
	CString GetFaxCppVersionStr();
	long TestModem(LPCTSTR Port);
	long SetFaxParam(long FaxID, short ParamType, short Data);
	long GetFaxParam(long FaxID, short ParamType);
	long SetSpeakerMode(LPCTSTR Port, short SpkTurnOn, short SpkVolume);
	long WriteFaxObject(long FaxID, LPCTSTR FileName);
	long ReadFaxObject(long FaxID, LPCTSTR FileName);
	short SetPhoneNumber(long FaxID, LPCTSTR PhoneNumber);
	CString GetPhoneNumber(long FaxID);
	long GetPortStatus(LPCTSTR Port);
	long CloseAllPorts();
	long DeleteAllObjects();
	long OpenPort(LPCTSTR PortName);
	long ClosePort(LPCTSTR PortName);
	long SetRings(LPCTSTR PortName, short RingNumber);
	short GetRings(LPCTSTR PortName);
	long SetPortID(LPCTSTR PortName, LPCTSTR LocalID);
	CString GetPortID(LPCTSTR PortName);
	long Abort(LPCTSTR PortName);
	long SendNow(LPCTSTR PortName, long FaxID);
	long SetNext(long FaxID, long NextFaxID);
	CString GetDTMFDigits(LPCTSTR szPort);
	short RecvDTMF(LPCTSTR lpPort, short nDigits, long nTimeout);
	CString GetLastPageFile(LPCTSTR PortName);
	long GetNumberOfImages(LPCTSTR FileName, short FileType);
	long DisablePort(LPCTSTR PortName, BOOL Disabled);
	long IsPortDisabled(LPCTSTR PortName);
	long GetLastGammaStatus(LPCTSTR PortName);
	long SendFaxNowTapi(long TapiID, long FaxID, long lpUserData);
	long ReceiveNowTapi(long TapiID);
	long DetectDialTone(LPCTSTR Port);
	CString GetSetupString(short index);
	CString GetResetString(short index);
	short SetSetupString(LPCTSTR SetupStr, short index);
	short SetResetString(LPCTSTR ResetStr, short index);
	short SetUserString(long FaxID, LPCTSTR UserString);
	CString GetUserString(long FaxID);
	CString GetLongName(short index);
};
