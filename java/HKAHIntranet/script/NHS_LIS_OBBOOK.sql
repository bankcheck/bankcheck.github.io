create or replace
FUNCTION "NHS_LIS_OBBOOK"(
V_PATNO     IN VARCHAR2,
V_PATNAME   IN VARCHAR2,
V_DOCCODE   IN VARCHAR2,
V_DOCNAME   IN VARCHAR2,
V_PATIDNO   IN VARCHAR2,
V_BPBHFDATE IN VARCHAR2,
V_BPBHTDATE IN VARCHAR2,
V_BPBTYPE   IN VARCHAR2,
V_BPBOFDATE IN VARCHAR2,
V_BPBOTDATE IN VARCHAR2,
V_DEPS      IN VARCHAR2,
V_STATUS    IN VARCHAR2,
V_OTCASE    IN VARCHAR2,
V_DECLINE   IN VARCHAR2,
V_ORDERBY   IN VARCHAR2,
V_PATCNAME IN VARCHAR2)
	RETURN TYPES.CURSOR_TYPE
AS
	V_WARDCODE VARCHAR2(10);
	OUTCUR TYPES.CURSOR_TYPE;
	SQLSTR VARCHAR2(3000);
BEGIN
	IF V_STATUS = 'W' THEN
		SQLSTR := '
			SELECT '''',
				''W'' AS BPBSTS,
				'''',
				B.OB_PATIENT_ID,
				UPPER(B.OB_LASTNAME || '' '' || B.OB_FIRSTNAME) AS PATNAME,
				B.OB_CHINESENAME AS PATCNAME,
				D.CO_DISPLAYNAME || '' ('' || B.OB_DOCTOR_CODE || '')'' AS DOCNAME,
				''F'',
				TRUNC(MONTHS_BETWEEN(SYSDATE, NVL(B.OB_DOB, SYSDATE)) / 12, 0) AS AGE,
				'''',
				'''',
				TO_CHAR(B.OB_EXPECTED_DELIVERYDATE, ''DD/MM/YYYY HH24:MI:SS'') AS HOSDATE,
				'''',
				'''',
				TO_CHAR(B.OB_CREATED_DATE, ''DD/MM/YYYY'') AS ORDDATE,
				B.OB_CREATED_USER AS CREATEUSERNAME,
				'''' AS REMARK,
				B.OB_DOC_NO,
				B.OB_CONTACT_NO,
				'''',
				'''' AS OTPDESC,
				'''' AS OTAOSDATE,
				'''',
				'''',
				B.OB_MODIFIED_USER AS EDITUSERNAME,
				TO_CHAR(B.OB_MODIFIED_DATE, ''DD/MM/YYYY''),
				'''',
				'''',
				B.OB_CREATED_USER,
				B.OB_MODIFIED_USER,
				'''',
				B.OB_DOCTOR_CODE,
				'''',
				B.OB_LASTNAME,
				B.OB_FIRSTNAME
			FROM OB_BOOKINGS B
			LEFT JOIN CO_DOCTORS D
			ON D.CO_DOC_CODE = B.OB_DOCTOR_CODE
			WHERE B.OB_ENABLED = ''1''
			AND   B.OB_BOOKING_STATUS = ''W''';

		IF V_PATNO IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.OB_PATIENT_ID = ''' || V_PATNO || '''';
		END IF;

		IF V_DOCCODE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.OB_DOCTOR_CODE = ''' || V_DOCCODE || '''';
		END IF;

		IF V_PATCNAME IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.OB_CHINESENAME LIKE ''%' || V_PATCNAME || '%''';
		END IF;

		IF V_PATNAME IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND (B.OB_LASTNAME LIKE ''%' || V_PATNAME || '%''';
			SQLSTR := SQLSTR || ' OR   B.OB_FIRSTNAME LIKE ''%' || V_PATNAME || '%''';
			SQLSTR := SQLSTR || ' OR   B.OB_LASTNAME || '' '' || B.OB_FIRSTNAME LIKE ''%' || V_PATNAME || '%'')';
		END IF;

		IF V_DOCNAME IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.OB_DOCTOR_CODE IN (SELECT DOCCODE FROM doctor@IWEB WHERE DOCFNAME || '' '' || DOCGNAME LIKE ''' || V_DOCNAME || '%''';
		END IF;

		IF V_PATIDNO IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND UPPER(B.OB_DOC_NO) LIKE ''' || V_PATIDNO || '%''';
		END IF;

		IF V_BPBHFDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.OB_EXPECTED_DELIVERYDATE >= TO_DATE(''' || V_BPBHFDATE || ' 00:00:00'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_BPBHTDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.OB_EXPECTED_DELIVERYDATE <= TO_DATE(''' || V_BPBHTDATE || ' 23:59:59'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_BPBOFDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBODATE >= TO_DATE(''' || V_BPBOFDATE || ' 00:00:00'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_BPBOTDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBODATE <= TO_DATE(''' || V_BPBOTDATE || ' 23:59:59'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_ORDERBY = 'PN' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.OB_PATIENT_ID';
		ELSIF V_ORDERBY = 'NA' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.OB_LASTNAME, B.OB_FIRSTNAME';
		ELSIF V_ORDERBY = 'CN' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.OB_CHINESENAME';
		ELSIF V_ORDERBY = 'DN' THEN
			SQLSTR := SQLSTR || ' ORDER BY DOCNAME, B.OB_EXPECTED_DELIVERYDATE, B.OB_LASTNAME, B.OB_FIRSTNAME';
		ELSIF V_ORDERBY = 'SD' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.OB_EXPECTED_DELIVERYDATE, B.OB_LASTNAME, B.OB_FIRSTNAME';
		ELSE
			SQLSTR := SQLSTR || ' ORDER BY B.OB_CREATED_DATE';
		END IF;
	ELSIF V_STATUS = 'N' OR V_STATUS = 'F' OR V_STATUS = 'D' THEN
		SELECT PARAM1 INTO V_WARDCODE FROM SYSPARAM@IWEB WHERE PARCDE = 'obwardcode';

		SQLSTR := '
			SELECT '''',
				DECODE(B.BPBSTS, ''D'', ''C'', ''F'', ''A'', ''N'') AS BPBSTS,
				B.BPBNO,
				B.PATNO,
				UPPER(B.PATFNAME || '' '' || B.PATGNAME) AS PATNAME,
				B.BPBCNAME AS PATCNAME,
				D.DOCFNAME || '' '' || D.DOCGNAME || '' ('' || B.DOCCODE || '')'' AS DOCNAME,
				B.SEX,
				TRUNC(MONTHS_BETWEEN(SYSDATE, NVL(P.PATBDATE,
					(SELECT OTABDATE FROM OT_APP@IWEB WHERE PBPID = B.PBPID AND ROWNUM = 1))) / 12, 0) AS AGE,
				B.ACMCODE,
				B.WRDCODE,
				TO_CHAR(B.BPBHDATE, ''DD/MM/YYYY HH24:MI:SS'') AS HOSDATE,
				B.BEDCODE,
				TO_CHAR(B.BEDTIME, ''DD/MM/YYYY HH24:MI''),
				TO_CHAR(B.BPBODATE, ''DD/MM/YYYY'') AS ORDDATE,
				U1.USRNAME AS CREATEUSERNAME,
				B.BPBRMK AS REMARK,
				B.PATIDNO,
				B.PATKHTEL,
				B.PATPAGER,
				(SELECT P.OTPDESC FROM OT_PROC@IWEB P WHERE P.OTPID =
					(SELECT MIN(OTPID) FROM OT_APP@IWEB X WHERE X.PBPID = B.PBPID AND X.OTAOSDATE =
						(SELECT MIN(A.OTAOSDATE) FROM OT_APP@IWEB A WHERE A.PBPID = B.PBPID))) AS OTPDESC,
				(SELECT TO_CHAR(MIN(A.OTAOSDATE), ''DD/MM/YYYY HH24:MI:SS'') FROM OT_APP@IWEB A WHERE A.PBPID = B.PBPID) AS OTAOSDATE,
				B.CABLABRMK,
				B.SLPNO,
				U2.USRNAME AS EDITUSERNAME,
				TO_CHAR(B.EDITDATE, ''DD/MM/YYYY''),
				B.ISREFUSED,
				B.PBPID,
				B.USRID,
				B.EDITUSER,
				B.BPBTYPE,
				B.DOCCODE,
				B.FORDELIVERY,
				B.PATFNAME,
				B.PATGNAME
			FROM BEDPREBOK@IWEB B
			LEFT JOIN USR@IWEB U1
			ON U1.USRID = B.USRID
			LEFT JOIN USR@IWEB U2
			ON U2.USRID = B.EDITUSER
			LEFT JOIN PATIENT@IWEB P
			ON P.PATNO = B.PATNO
			LEFT JOIN DOCTOR@IWEB D
			ON D.DOCCODE = B.DOCCODE
			WHERE B.FORDELIVERY = ''-1''';

		IF V_PATNO IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.PATNO = ''' || V_PATNO || '''';
		END IF;

		IF V_DOCCODE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.DOCCODE = ''' || V_DOCCODE || '''';
		END IF;

		IF V_PATCNAME IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBCNAME LIKE ''%' || V_PATCNAME || '%''';
		END IF;

		IF V_PATNAME IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND (B.PATFNAME LIKE ''%' || V_PATNAME || '%''';
			SQLSTR := SQLSTR || ' OR   B.PATGNAME LIKE ''%' || V_PATNAME || '%''';
			SQLSTR := SQLSTR || ' OR   B.PATFNAME || '' '' || B.PATGNAME LIKE ''%' || V_PATNAME || '%'')';
		END IF;

		IF V_DOCNAME IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.DOCCODE IN (SELECT DOCCODE FROM doctor@IWEB WHERE DOCFNAME || '' '' || DOCGNAME LIKE ''' || V_DOCNAME || '%''';
		END IF;

		IF V_WARDCODE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.WRDCODE = ''' || V_WARDCODE || '''';
		END IF;

		IF V_PATIDNO IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND UPPER(B.PATidno) LIKE ''' || V_PATIDNO || '%''';
		END IF;

		IF V_BPBHFDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBHDATE >= TO_DATE(''' || V_BPBHFDATE || ' 00:00:00'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_BPBHTDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBHDATE <= TO_DATE(''' || V_BPBHTDATE || ' 23:59:59'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_BPBTYPE = 'W' THEN
			SQLSTR := SQLSTR || ' AND B.BPBTYPE= ''W''';
		ELSIF V_BPBTYPE = 'B' THEN
			SQLSTR := SQLSTR || ' AND B.BPBTYPE= ''B''';
		END IF;

		IF V_BPBOFDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBODATE >= TO_DATE(''' || V_BPBOFDATE || ' 00:00:00'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_BPBOTDATE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' AND B.BPBODATE <= TO_DATE(''' || V_BPBOTDATE || ' 23:59:59'',''dd/mm/yyyy HH24:MI:SS'')';
		END IF;

		IF V_DEPS = 'N' THEN
			SQLSTR := SQLSTR || ' AND B.SLPNO IS NULL';
		ELSIF V_DEPS = 'P' THEN
			SQLSTR := SQLSTR || ' AND B.SLPNO IS NOT NULL';
		END IF;

		SQLSTR := SQLSTR || ' AND B.BPBSTS IN (''' || V_STATUS || ''')';

		IF V_OTCASE = 'N' THEN
			SQLSTR := SQLSTR || ' AND B.PBPID IS NULL';
		ELSIF V_OTCASE = 'S' THEN
			SQLSTR := SQLSTR || ' AND (B.PBPID IN (SELECT PBPID FROM OT_APP@IWEB))';
		END IF;

		IF V_DECLINE = 'S' THEN
			SQLSTR := SQLSTR || ' AND NVL(B.ISREFUSED, 0) = -1';
		ELSIF V_DECLINE = 'N' THEN
			SQLSTR := SQLSTR || ' AND NVL(B.ISREFUSED, 0) = 0 ';
		END IF;

		IF V_ORDERBY = 'PN' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.PATNO';
		ELSIF V_ORDERBY = 'NA' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.BPBPNAME';
		ELSIF V_ORDERBY = 'CN' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.BPBCNAME';
		ELSIF V_ORDERBY = 'DN' THEN
			SQLSTR := SQLSTR || ' ORDER BY DOCNAME, B.BPBHDATE, B.BPBPNAME';
		ELSIF V_ORDERBY = 'SD' THEN
			SQLSTR := SQLSTR || ' ORDER BY B.BPBHDATE, B.BPBPNAME';
		ELSE
			SQLSTR := SQLSTR || ' ORDER BY B.BPBNO';
		END IF;
	END IF;

	OPEN OUTCUR FOR SQLSTR;
	RETURN OUTCUR;
END NHS_LIS_OBBOOK;