create or replace
FUNCTION OB_HATS_2_BOOKING ( i_usrid IN VARCHAR2, i_pbpid IN VARCHAR2, i_status IN VARCHAR2, i_cancelreason IN VARCHAR2 )
RETURN INTEGER
AS
	v_bookingid INTEGER;
	v_count INTEGER;
BEGIN
	-- extract booking info
	SELECT COUNT(1) INTO v_count FROM OB_BOOKINGS WHERE OB_PBP_ID = i_pbpid AND OB_ENABLED = 1;
	IF v_count = 0 THEN
		-- get booking id
		SELECT COUNT(1) INTO v_bookingid FROM OB_BOOKINGS;
		IF v_bookingid = 0 THEN
			v_bookingid := 1;
		ELSE
			SELECT MAX(OB_BOOKING_ID) + 1 INTO v_bookingid FROM OB_BOOKINGS;
		END IF;

		INSERT INTO OB_BOOKINGS
		(OB_BOOKING_ID, OB_PBP_ID, OB_DOCTOR_CODE, OB_PATIENT_ID, OB_LASTNAME, OB_FIRSTNAME, OB_CHINESENAME, OB_CONTACT_NO, OB_DOC_TYPE, OB_DOC_NO, OB_EXPECTED_DELIVERYDATE,
			OB_KIN_LASTNAME, OB_KIN_FIRSTNAME, OB_KIN_CHINESENAME, OB_KIN_CONTACT_NO, OB_KIN_DOB, OB_KIN_DOC_TYPE, OB_KIN_DOC_NO,
			OB_CHECKED_DATE1, OB_CHECKED_DATE2, OB_CHECKED_DATE3, OB_CHECKED_DATE4, OB_CHECKED_DATE5,
			OB_BOOKING_STATUS, OB_CANCEL_REASON)
		SELECT v_bookingid, i_pbpid, DOCCODE, PATNO, PATFNAME, PATGNAME, BPBCNAME, PATPAGER, PATDOCTYPE, PATIDNO, BPBHDATE,
		       HUSFNAME, HUSGNAME, FA_CNAME, FA_TEL, FA_DOB, HUSDOCTYPE, HUSDOCNO,
		       ANTCHKDT1, ANTCHKDT2, ANTCHKDT3, ANTCHKDT4, ANTCHKDT5,
		       i_status, i_cancelreason
		FROM   BEDPREBOK@IWEB
		WHERE  PBPID = i_pbpid;
	END IF;

	COMMIT;

	RETURN v_bookingid;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);

	RETURN NULL;
END OB_HATS_2_BOOKING;
/