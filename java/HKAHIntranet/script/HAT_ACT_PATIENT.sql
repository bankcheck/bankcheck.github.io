create or replace FUNCTION "HAT_ACT_PATIENT" (
	v_action IN VARCHAR2,
	v_admno  IN VARCHAR2,
	o_errmsg OUT VARCHAR2
)
	RETURN NUMBER
AS
	v_noOfRec NUMBER;
--	v_noOfRec1 NUMBER;
	o_errcode NUMBER;
	o_errcode1 NUMBER;

	v_PATNO HAT_PATIENT.HAT_PATNO%TYPE;
	v_PATIDNO HAT_PATIENT.HAT_PATIDNO%TYPE;
	v_PATFNAME HAT_PATIENT.HAT_PATFNAME%TYPE;
	v_PATGNAME HAT_PATIENT.HAT_PATGNAME%TYPE;
	v_PATCNAME HAT_PATIENT.HAT_PATCNAME%TYPE;
	v_TITDESC HAT_PATIENT.HAT_TITDESC%TYPE;
	v_PATMSTS HAT_PATIENT.HAT_PATMSTS%TYPE;
	v_PATMNAME PATIENT.PATMNAME@IWEB%TYPE;
	v_RACDESC HAT_PATIENT.HAT_RACDESC%TYPE;
	v_PATBDATE VARCHAR2(10);
	v_MOTHCODE HAT_PATIENT.HAT_MOTHCODE%TYPE;
	v_PATSEX HAT_PATIENT.HAT_PATSEX%TYPE;
	v_EDULEVEL HAT_PATIENT.HAT_EDULEVEL%TYPE;
	v_RELIGIOUS HAT_PATIENT.HAT_RELIGIOUS%TYPE;
	v_DEATH VARCHAR2(10);
	v_OCCUPATION HAT_PATIENT.HAT_OCCUPATION%TYPE;
	v_PATMOTHER PATIENT.PATMOTHER@IWEB%TYPE;
	v_PATNB PATIENT.PATNB@IWEB%TYPE := 0;
	v_PATSTS VARCHAR2(2) := -1;
	V_HAT_WAY_HEAR_OTHER HAT_PATIENT.HAT_WAY_HEAR_OTHER%type;
	v_PATITP VARCHAR2(1) := 0;
	v_PATSTAFF VARCHAR2(1) := 0;
	v_PATEMAIL HAT_PATIENT.HAT_PATEMAIL%TYPE;
	v_PATHTEL HAT_PATIENT.HAT_PATHTEL%TYPE;
	v_PATOTEL HAT_PATIENT.HAT_PATOTEL%TYPE;
	v_PATMTEL HAT_PATIENT.HAT_PATMTEL%TYPE;
	v_PATFAXNO HAT_PATIENT.HAT_PATFAXNO%TYPE;
	v_PATADD1 HAT_PATIENT.HAT_PATADD1%TYPE;
	v_PATADD2 HAT_PATIENT.HAT_PATADD2%TYPE;
	v_PATADD3 HAT_PATIENT.HAT_PATADD3%TYPE;
	v_LOCCODE HAT_PATIENT.HAT_LOCCODE%TYPE;
	v_COUCODE HAT_PATIENT.HAT_COUCODE%TYPE;
	v_PATRMK PATIENT.PATRMK@IWEB%TYPE;
	v_PATKNAME VARCHAR(51);
	v_PATKHTEL HAT_PATIENT.HAT_PATKHTEL1%TYPE;
	v_PATKPTEL HAT_PATIENT.HAT_PATKPAGER1%TYPE;
	v_PATKRELA HAT_PATIENT.HAT_PATKRELA1%TYPE;
	v_PATKOTEL HAT_PATIENT.HAT_PATKOTEL1%TYPE;
	v_PATKMTEL HAT_PATIENT.HAT_PATKMTEL1%TYPE;
	v_PATKADD VARCHAR(123);
	v_PATKEMAIL HAT_PATIENT.HAT_PATKEMAIL1%TYPE;
	V_MKTSRC HAT_PATIENT.HAT_PATMKTSRC%type;
  V_INFOFORPROMOTION HAT_PATIENT.HAT_INFOFORPROMOTION%TYPE;
  V_PATCHKID  NUMBER;
  v_PATSMS NUMBER;
	v_PATNO1 VARCHAR2(10);
	v_PATCNAME1 VARCHAR(12);
	v_PATKNAME1 VARCHAR(40);
	v_PATKADD1 VARCHAR(100);
  v_PATADDRMK VARCHAR2(1000);
	susrid VARCHAR2(20) := 'IWEB';
	outcur TYPES.CURSOR_TYPE;
BEGIN
	o_errcode := 0;
	o_errmsg := 'OK';
  
 

	SELECT COUNT(1) INTO v_noOfRec FROM HAT_PATIENT WHERE HAT_ADMNO = v_admno;
	IF v_noOfRec = 1 THEN
		select
			HAT_PATNO, NVL(HAT_PATIDNO,HAT_PATPASSPORT), UPPER(HAT_PATFNAME), UPPER(HAT_PATGNAME), HAT_PATCNAME, UPPER(HAT_TITDESC),
			HAT_PATMSTS, HAT_RACDESC, TO_CHAR(HAT_PATBDATE, 'DD/MM/YYYY'), HAT_MOTHCODE, HAT_PATSEX,
			HAT_EDULEVEL, HAT_RELIGIOUS, UPPER(HAT_OCCUPATION),
			HAT_PATEMAIL, HAT_PATHTEL, HAT_PATOTEL,
			HAT_PATMTEL, HAT_PATFAXNO, UPPER(HAT_PATADD1), UPPER(HAT_PATADD2), UPPER(HAT_PATADD3), HAT_LOCCODE,
			HAT_COUCODE, HAT_PATKFNAME1 || ' ' || HAT_PATKGNAME1, HAT_PATKHTEL1, HAT_PATKPAGER1, HAT_PATKRELA1,
			HAT_PATKOTEL1, HAT_PATKMTEL1, HAT_PATKADD11 || ' ' || HAT_PATKADD21 || ' ' || HAT_PATKADD31 || ' ' || HAT_PATKADD41,
      HAT_PATKEMAIL1, HAT_PATMKTSRC,HAT_INFOFORPROMOTION
		INTO
			v_PATNO, v_PATIDNO, v_PATFNAME, v_PATGNAME, v_PATCNAME, v_TITDESC,
			v_PATMSTS, v_RACDESC, v_PATBDATE, v_MOTHCODE, v_PATSEX,
			v_EDULEVEL, v_RELIGIOUS, v_OCCUPATION,
			v_PATEMAIL, v_PATHTEL, v_PATOTEL,
			v_PATMTEL, v_PATFAXNO, v_PATADD1, v_PATADD2, v_PATADD3, v_LOCCODE,
			V_COUCODE, V_PATKNAME, V_PATKHTEL, V_PATKPTEL, V_PATKRELA,
			v_PATKOTEL, v_PATKMTEL, v_PATKADD, v_PATKEMAIL, v_MKTSRC, V_INFOFORPROMOTION
		FROM   HAT_PATIENT
		WHERE  HAT_ENABLED = 1
		AND    HAT_ADMNO = v_admno;

		IF v_PATNO IS NOT NULL THEN
			SELECT COUNT(1) INTO v_noOfRec FROM PATIENT@IWEB WHERE PATNO = v_PATNO;
			IF V_NOOFREC = 1 THEN
				SELECT TO_CHAR(DEATH, 'DD/MM/YYYY'), PATNB, PATSTS, PATITP, PATSTAFF, PATRMK, PATCHKID,PATSMS, PATADDRMK, PATMOTHER
				INTO   v_DEATH, v_PATNB, v_PATSTS, v_PATITP, v_PATSTAFF, v_PATRMK, v_PATCHKID, v_PATSMS, v_PATADDRMK, v_PATMOTHER
				FROM   PATIENT@IWEB
				WHERE  PATNO = v_PATNO;
			END IF;
		END IF;
	END IF;

	IF TRIM(v_PATCNAME) = '' THEN
		v_PATCNAME1 := NULL;
	ELSIF LENGTH(v_PATCNAME) > 10 THEN
		v_PATCNAME1 := SUBSTR(v_PATCNAME, 1, 10);
	ELSE
		v_PATCNAME1 := v_PATCNAME;
	END IF;

	IF TRIM(v_PATKNAME) = '' THEN
		v_PATKNAME1 := NULL;
	ELSIF LENGTH(v_PATKNAME) > 40 THEN
		v_PATKNAME1 := SUBSTR(v_PATKNAME, 1, 40);
	ELSE
		v_PATKNAME1 := v_PATKNAME;
	END IF;

	IF V_INFOFORPROMOTION = 'N' THEN
		v_PATSTS := '0';
	ELSE
		v_PATSTS := '-1';
	END IF;

	IF TRIM(v_PATKADD) = '' THEN
		v_PATKADD1 := NULL;
	ELSIF LENGTH(v_PATKADD) > 100 THEN
		v_PATKADD1 := SUBSTR(v_PATKADD, 1, 100);
	ELSE
		v_PATKADD1 := v_PATKADD;
	END IF;

	SELECT count(1) INTO v_noOfRec FROM PATIENT@IWEB WHERE PATNO = v_PATNO;
	IF v_action = 'ADD' THEN
		IF v_noOfRec = 0 THEN
			v_PATNO1 := NHS_ACT_PATIENT@IWEB(
				v_action,
				'', -- v_PATNO1
				v_PATIDNO,
				'', -- v_PatIDCoun
				v_PATFNAME,
				v_TITDESC,
				v_PATGNAME,
				v_PATCNAME1,
				v_PATMSTS,
				v_PATMNAME,
				v_RACDESC,
				v_PATBDATE,
				v_MOTHCODE,
				v_PATSEX,
				v_EDULEVEL,
				v_RELIGIOUS,
				v_DEATH,
				v_OCCUPATION,
				v_PATMOTHER,
				v_PATNB,
				v_PATSTS,
				v_PATITP,
				V_PATSTAFF,
				TO_CHAR(V_PATSMS), -- v_PatSMSCheck,
				TO_CHAR(v_PATCHKID), -- v_PatCheckID,
				v_PATEMAIL,
				v_PatHTel,
				v_PatOTel,
				v_PATMTEL,
				v_PatFaxNo,
				v_PatAdd1,
				v_PatAdd2,
				v_PatAdd3,
				v_LocCode,
				v_CouCode,
				v_PatRmk,
				v_PatKName1,
				v_PatKHTel,
				v_PatKPTel,
				v_PatKRELA,
				v_PatKOTel,
				v_PatKMTel,
				v_PatKEmail,
				v_PatKAdd,
				'', -- v_MBLDESC
				'', -- v_PatLFName
				'', -- v_PatLGName
				v_PATADDRMK, -- v_PatAddRmk,
				'', -- v_PatDocType,
				v_MKTSRC,
				'', -- v_MktRmk
				'', -- v_DentNo
				'', -- v_MiscRmk
				SUSRID,
        '',
				o_errmsg
			);
			o_errcode := TO_NUMBER(v_PATNO1);
      
       INSERT INTO SYSLOG (MODULE,ACTION,REMARK,USERID,SYSTIME,PCNAME) 
      VALUES (
      'PORTAL',
      'HAT_ACT_PATIENT',
      '[o_errCode]:'||o_errCode||';[v_PATNO1]:'||v_PATNO1||';[o_errmsg]:'||o_errmsg,
      'SYSTEM',
      SYSDATE,
      NULL);    

--			IF o_errcode > 0 THEN
--				outcur := NHS_ACT_MEDREC_ADD@IWEB(
--					v_action, '0', 'P', 'C',
--					v_PATNO1, GET_CURRENT_STECODE@IWEB,
--					'', '', '', '', susrid, '0', '0', '-1');
--			END IF;
		ELSE
			o_errcode := -1;
			o_errmsg := 'Record already exists.';
		END IF;
	ELSIF v_action = 'MOD' THEN
		IF v_noOfRec > 0 THEN
			v_PATNO1 := NHS_ACT_PATIENT@IWEB(
				v_action,
				v_PATNO,
				v_PATIDNO,
				'', -- v_PatIDCoun
				v_PATFNAME,
				v_TITDESC,
				v_PATGNAME,
				v_PATCNAME1,
				v_PATMSTS,
				v_PATMNAME,
				v_RACDESC,
				v_PATBDATE,
				v_MOTHCODE,
				v_PATSEX,
				v_EDULEVEL,
				v_RELIGIOUS,
				v_DEATH,
				v_OCCUPATION,
				v_PATMOTHER,
				v_PATNB,
				v_PATSTS,
				v_PATITP,
				v_PATSTAFF,
				TO_CHAR(V_PATSMS), -- v_PatSMSCheck,
				TO_CHAR(v_PATCHKID), -- v_PatCheckID,
				v_PATEMAIL,
				v_PatHTel,
				v_PatOTel,
				v_PATMTEL,
				v_PatFaxNo,
				v_PatAdd1,
				v_PatAdd2,
				v_PatAdd3,
				v_LocCode,
				v_CouCode,
				v_PatRmk,
				v_PatKName1,
				v_PatKHTel,
				v_PatKPTel,
				v_PatKRELA,
				v_PatKOTel,
				v_PatKMTel,
				v_PatKEmail,
				v_PatKAdd,
				'', -- v_MBLDESC
				'', -- v_PatLFName
				'', -- v_PatLGName
				v_PATADDRMK, -- v_PatAddRmk,
				'', -- v_PatDocType,
				v_MKTSRC,
				'', -- v_MktRmk
				'', -- v_DentNo
				'', -- v_MiscRmk
				SUSRID,
        '',
				o_errmsg
			);
		ELSE
			o_errcode := -1;
			o_errmsg := 'Fail to update due to record not exist.';
		END IF;
	ELSIF v_action = 'DEL' THEN
		IF v_noOfRec > 0 THEN
			DELETE PATIENT@IWEB WHERE PATNO = v_PATNO;
		ELSE
			o_errcode := -1;
			o_errmsg := 'Fail to delete due to record not exist.';
		END IF;
	END IF;

	RETURN o_errcode;

EXCEPTION
WHEN OTHERS THEN
	o_errCode := -1;
	o_errmsg:= o_errmsg || SQLERRM;
     
      INSERT INTO SYSLOG (MODULE,ACTION,REMARK,USERID,SYSTIME,PCNAME) 
      VALUES (
      'PORTAL',
      'HAT_ACT_PATIENT',
      '[o_errCode]:'||o_errCode||';[v_patno]:'||v_PATNO||';[o_errmsg]:'||o_errmsg,
      'SYSTEM',
      SYSDATE,
      NULL);
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	ROLLBACK;
	RETURN o_errCode;
END HAT_ACT_PATIENT;
/
