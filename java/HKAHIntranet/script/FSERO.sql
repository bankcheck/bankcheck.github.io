-- Create function and access right
Insert into AC_FUNCTION (AC_FUNCTION_ID,AC_GROUP_ID,AC_INTRANET_ONLY,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.create','dfsr',0,to_timestamp('23-3月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('23-3月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1);
Insert into AC_FUNCTION (AC_FUNCTION_ID,AC_GROUP_ID,AC_INTRANET_ONLY,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.list','dfsr',0,to_timestamp('03-5月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('03-5月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1);
Insert into AC_FUNCTION (AC_FUNCTION_ID,AC_GROUP_ID,AC_INTRANET_ONLY,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.setcharge','dfsr',0,to_timestamp('24-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('24-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1);
Insert into AC_FUNCTION (AC_FUNCTION_ID,AC_GROUP_ID,AC_INTRANET_ONLY,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.setmenu','dfsr',0,to_timestamp('11-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('11-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1);


Insert into AC_FUNCTION_ACCESS (AC_FUNCTION_ID,AC_USER_ID,AC_GROUP_ID,AC_ACCESS_MODE,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.create','kim.ng','ALL','F',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',1);
Insert into AC_FUNCTION_ACCESS (AC_FUNCTION_ID,AC_USER_ID,AC_GROUP_ID,AC_ACCESS_MODE,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.create','melvin.choi','ALL','F',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',1);
Insert into AC_FUNCTION_ACCESS (AC_FUNCTION_ID,AC_USER_ID,AC_GROUP_ID,AC_ACCESS_MODE,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.create','terence.ho','ALL','F',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',1);
Insert into AC_FUNCTION_ACCESS (AC_FUNCTION_ID,AC_USER_ID,AC_GROUP_ID,AC_ACCESS_MODE,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.list','terence.ho','ALL','F',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',to_timestamp('27-2月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',1);
Insert into AC_FUNCTION_ACCESS (AC_FUNCTION_ID,AC_USER_ID,AC_GROUP_ID,AC_ACCESS_MODE,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.setcharge','terence.ho','ALL','F',to_timestamp('24-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',to_timestamp('24-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',1);
Insert into AC_FUNCTION_ACCESS (AC_FUNCTION_ID,AC_USER_ID,AC_GROUP_ID,AC_ACCESS_MODE,AC_CREATED_DATE,AC_CREATED_USER,AC_MODIFIED_DATE,AC_MODIFIED_USER,AC_ENABLED) values ('function.dfsr.setmenu','terence.ho','ALL','F',to_timestamp('11-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',to_timestamp('11-4月 -12','DD-MON-RR HH.MI.SSXFF AM'),'admin',1);


ALTER TABLE FS_REQUEST DROP PRIMARY KEY CASCADE;

DROP TABLE FS_REQUEST CASCADE CONSTRAINTS;

CREATE TABLE FS_REQUEST
(	
	REQ_NO VARCHAR2(8 BYTE) NOT NULL ENABLE,
	REQ_DATE DATE NOT NULL ENABLE,
	REQ_BY VARCHAR2(20 BYTE),
	SERV_DATE_START DATE NOT NULL ENABLE,
	SERV_DATE_END DATE NOT NULL ENABLE,
	REQ_SITE_CODE VARCHAR2(10 BYTE),
	REQ_DEPT_CODE VARCHAR2(10 BYTE),
	CHARGE_TO VARCHAR2(10 BYTE),
	VENUE_ID VARCHAR2(10 BYTE),
	VENUE VARCHAR2(100 BYTE),
	REQ_STATUS VARCHAR2(1 BYTE), 	
	PURPOSE VARCHAR2(100 BYTE),
	AMOUNT NUMBER(*,2) DEFAULT 0,
	NO_OF_PERSON NUMBER(*,0) DEFAULT 0,
	MEAL_TYPE VARCHAR2(1 BYTE),
	MENU VARCHAR2(4000 BYTE),
	REMARKS VARCHAR2(4000 BYTE),
	SEND_APPROVAL VARCHAR2(20 BYTE),
	INS_BY VARCHAR2(20 BYTE), 
	INS_DATE DATE,
	MOD_BY VARCHAR2(20 BYTE), 
	MOD_DATE DATE,
	APPROVE_FLAG NUMBER(*,0),
	APPROVED_BY VARCHAR2(20 BYTE), 
	APPROVED_DATE DATE,
	POST_DATE DATE,
	INSTANCE_ID VARCHAR2(10 BYTE),
	PRIMARY KEY (REQ_NO)
);

ALTER TABLE FS_REQUEST_LOG DROP PRIMARY KEY CASCADE;

DROP TABLE FS_REQUEST_LOG CASCADE CONSTRAINTS;

CREATE TABLE FS_REQUEST_LOG
(	
	REQ_NO VARCHAR2(8 BYTE) NOT NULL ENABLE,                                                                                                                                                                                 
	REQ_STATUS VARCHAR2(1 BYTE), 
	TASK_ID VARCHAR2(10 BYTE), 	
	INSERT_BY VARCHAR2(20),                                                                                                                                                                                  
	INSERT_DATE DATE
);

Insert into FS_MEAL (MEAL_ID,MEAL_DESC,ENABLED) values ('1','Set Meal',1);
Insert into FS_MEAL (MEAL_ID,MEAL_DESC,ENABLED) values ('2','Buffet',1);
Insert into FS_MEAL (MEAL_ID,MEAL_DESC,ENABLED) values ('3','Refreshment',1);
Insert into FS_MEAL (MEAL_ID,MEAL_DESC,ENABLED) values ('4','A La Carte',1);

ALTER TABLE FS_MEAL DROP PRIMARY KEY CASCADE;

DROP TABLE FS_MEAL CASCADE CONSTRAINTS;

CREATE TABLE FS_MEAL
(	
	MEAL_ID VARCHAR2(8 BYTE) NOT NULL ENABLE,
	MEAL_DESC VARCHAR2(200 BYTE),
	ENABLED NUMBER,
	PRIMARY KEY (MEAL_ID)
);


-- Venue data
Insert into CO_EVENT (CO_SITE_CODE,CO_MODULE_CODE,CO_EVENT_ID,CO_EVENT_DESC,CO_EVENT_SHORT_DESC,CO_EVENT_CATEGORY,CO_EVENT_TYPE,CO_DEPARTMENT_CODE,CO_EVENT_REMARK,CO_EVENT_REMARK2,CO_CREATED_DATE,CO_CREATED_USER,CO_MODIFIED_DATE,CO_MODIFIED_USER,CO_ENABLED,CO_EVENT_TYPE2,CO_REQUIRE_ASSESSMENT_PASS) values ('hkah','foodOrder',1301,'1B-Seminar Room (for 50-60 person)',null,'seminar',null,null,null,null,to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1,null,'N');
Insert into CO_EVENT (CO_SITE_CODE,CO_MODULE_CODE,CO_EVENT_ID,CO_EVENT_DESC,CO_EVENT_SHORT_DESC,CO_EVENT_CATEGORY,CO_EVENT_TYPE,CO_DEPARTMENT_CODE,CO_EVENT_REMARK,CO_EVENT_REMARK2,CO_CREATED_DATE,CO_CREATED_USER,CO_MODIFIED_DATE,CO_MODIFIED_USER,CO_ENABLED,CO_EVENT_TYPE2,CO_REQUIRE_ASSESSMENT_PASS) values ('hkah','foodOrder',1302,'1B-Conference Room (Medium size for above 10 – 12)',null,'conference',null,null,null,null,to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1,null,'N');
Insert into CO_EVENT (CO_SITE_CODE,CO_MODULE_CODE,CO_EVENT_ID,CO_EVENT_DESC,CO_EVENT_SHORT_DESC,CO_EVENT_CATEGORY,CO_EVENT_TYPE,CO_DEPARTMENT_CODE,CO_EVENT_REMARK,CO_EVENT_REMARK2,CO_CREATED_DATE,CO_CREATED_USER,CO_MODIFIED_DATE,CO_MODIFIED_USER,CO_ENABLED,CO_EVENT_TYPE2,CO_REQUIRE_ASSESSMENT_PASS) values ('hkah','foodOrder',1303,'1B-Meeting Room (small size for less than 6 person)',null,'meeting',null,null,null,null,to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1,null,'N');
Insert into CO_EVENT (CO_SITE_CODE,CO_MODULE_CODE,CO_EVENT_ID,CO_EVENT_DESC,CO_EVENT_SHORT_DESC,CO_EVENT_CATEGORY,CO_EVENT_TYPE,CO_DEPARTMENT_CODE,CO_EVENT_REMARK,CO_EVENT_REMARK2,CO_CREATED_DATE,CO_CREATED_USER,CO_MODIFIED_DATE,CO_MODIFIED_USER,CO_ENABLED,CO_EVENT_TYPE2,CO_REQUIRE_ASSESSMENT_PASS) values ('hkah','foodOrder',1304,'12B-Board Room',null,'board',null,null,null,null,to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1,null,'N');
Insert into CO_EVENT (CO_SITE_CODE,CO_MODULE_CODE,CO_EVENT_ID,CO_EVENT_DESC,CO_EVENT_SHORT_DESC,CO_EVENT_CATEGORY,CO_EVENT_TYPE,CO_DEPARTMENT_CODE,CO_EVENT_REMARK,CO_EVENT_REMARK2,CO_CREATED_DATE,CO_CREATED_USER,CO_MODIFIED_DATE,CO_MODIFIED_USER,CO_ENABLED,CO_EVENT_TYPE2,CO_REQUIRE_ASSESSMENT_PASS) values ('hkah','foodOrder',1305,'2B-Staff Lounge',null,'lounge',null,null,null,null,to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('06-7月 -09','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1,null,'N');
Insert into CO_EVENT (CO_SITE_CODE,CO_MODULE_CODE,CO_EVENT_ID,CO_EVENT_DESC,CO_EVENT_SHORT_DESC,CO_EVENT_CATEGORY,CO_EVENT_TYPE,CO_DEPARTMENT_CODE,CO_EVENT_REMARK,CO_EVENT_REMARK2,CO_CREATED_DATE,CO_CREATED_USER,CO_MODIFIED_DATE,CO_MODIFIED_USER,CO_ENABLED,CO_EVENT_TYPE2,CO_REQUIRE_ASSESSMENT_PASS) values ('hkah','foodOrder',1306,'Others',null,null,null,null,null,null,to_timestamp('23-3月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',to_timestamp('23-3月 -12','DD-MON-RR HH.MI.SSXFF AM'),'SYSTEM',1,null,'N');

DROP TABLE FS_APPROVE_LIST CASCADE CONSTRAINTS;	

CREATE TABLE FS_APPROVE_LIST
(
FLOW_ID NUMBER(*,0),
FLOW_SEQ NUMBER(*,0),
STAFF_ID VARCHAR2(20 BYTE),
SITE_CODE VARCHAR2(10 BYTE),
DEPT_CODE NUMBER(*,0),
CO_POSITION_1 VARCHAR2(50 BYTE),
CO_POSITION_2 VARCHAR2(50 BYTE),
APPROVAL_CREDIT NUMBER(*,0),   
CO_ENABLED  NUMBER(*,0)
);

INSERT INTO FS_APPROVE_LIST (FLOW_ID, FLOW_SEQ, STAFF_ID, SITE_CODE, DEPT_CODE, CO_POSITION_1, CO_POSITION_2, APPROVAL_CREDIT, CO_ENABLED) VALUES ('1','1','3737','hkah','300','Michael Tang M K','Head Chef',0,1);



DROP SEQUENCE FS_REQ_SEQ;

CREATE SEQUENCE  "HKAH"."FS_REQ_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

CREATE OR REPLACE
FUNCTION F_GET_PMS_TRANSNO (
as_repType varchar2)
RETURN varchar2 
IS
ls_seqNo NUMBER;
ls_sysYr varchar2(2);
ls_repNo varchar2(8);

BEGIN
	ls_sysYr := TO_CHAR(sysdate,'yy');	
	
	CASE as_repType
  	WHEN 'R' THEN 
  		SELECT EPO_REQ_SEQ.NEXTVAL INTO ls_seqNo FROM dual;
  	WHEN 'J' THEN 
  		SELECT EPO_PO_SEQ.NEXTVAL INTO ls_seqNo FROM dual;
  	WHEN 'S' THEN 
  		SELECT FS_REQ_SEQ.NEXTVAL INTO ls_seqNo FROM dual;        
--  	WHEN 2 THEN Action2;

--  	ELSE ActionOther;
	END CASE;
	
  	ls_repNo := as_repType||ls_sysYr||SUBSTR('0000'||TO_CHAR(ls_seqNo),-5,5);
	dbms_output.put_line('ls_repNo:'||ls_repNo);  	
  	
	RETURN ls_repNo;
EXCEPTION
WHEN OTHERS THEN
      raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
      RETURN NULL;      
END F_GET_PMS_TRANSNO;



create or replace
PROCEDURE PROC_UPT_POSTDATE (
as_modBy IN fs_request.mod_by%TYPE,
as_postDate IN varchar2)
IS
reqNo varchar2(8);

CURSOR c_getUpdateRecord IS
SELECT req_no
FROM fs_request
WHERE req_status = 'B'
AND post_date IS NULL;

BEGIN
dbms_output.put_line('[as_modBy]:'||as_modBy||';[as_postDate]:'||as_postDate);
	OPEN c_getUpdateRecord;
	LOOP
	FETCH c_getUpdateRecord INTO reqNo;
	EXIT WHEN c_getUpdateRecord%NOTFOUND;
    UPDATE fs_request
    SET req_status = 'P',
    post_date = TO_DATE(as_postDate,'DD/MM/YYYY'),
    mod_by = as_modBy,
    mod_date = SYSDATE
    WHERE req_no = reqNo;
    
    INSERT INTO fs_request_log (
    req_no,req_status,task_id,insert_by,insert_date) 
    VALUES (
    reqNo, 'P', NULL, as_modby, SYSDATE);
  END LOOP;
  CLOSE c_getUpdateRecord;

  COMMIT;
EXCEPTION
WHEN OTHERS THEN
ROLLBACK;
dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
END;