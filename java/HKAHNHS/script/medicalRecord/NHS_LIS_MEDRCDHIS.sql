CREATE OR REPLACE FUNCTION "NHS_LIS_MEDRCDHIS" (
	V_MRHID  IN VARCHAR2,
	V_MRHSTS IN VARCHAR2
)
	RETURN TYPES.CURSOR_TYPE
AS
	OUTCUR TYPES.CURSOR_TYPE;
	SQLSTR VARCHAR2(2000);
BEGIN
	SQLSTR := 'SELECT '' '',
		D.MRDID,
		D.MRDSTS,
		DECODE(D.MRDSTS,''C'',''Create'',''T'',''Transfer'',''M'',''Missing'',''R'',''Request'',''D'',''Delete'',D.MRDSTS),
		TO_CHAR(D.MRDDDATE,''DD/MM/YYYY HH24:MI:SS''),
		D.MRLID_L,
		L1.MRLDESC,
		D.DOCCODE,
		DT.DOCFNAME || '' '' || DT.DOCGNAME,
		D.MRDRMK,
		D.MRLID_R,
		L2.MRLDESC,
		TO_CHAR(D.MRDRDATE,''DD/MM/YYYY HH24:MI:SS''),
		D.REQLOC,
		DECODE(D.MRDSTS, ''R'', NULL, H.MRMID) AS MRMID,
		DECODE(D.MRDSTS, ''R'', NULL,M.MRMDESC),
		D.USRID,
		U.USRNAME
	FROM MEDRECHDR H,
		MEDRECDTL D,
		MEDRECLOC L1,
		MEDRECLOC L2,
		DOCTOR    DT,
		MEDRECMED M,
		USR       U
	WHERE H.MRHID = D.MRHID
	AND D.MRLID_L = L1.MRLID(+)
	AND D.MRLID_R = L2.MRLID(+)
	AND D.DOCCODE = DT.DOCCODE(+)
	AND H.MRMID = M.MRMID(+)
	AND D.USRID = U.USRID(+)';

	IF V_MRHSTS = 'N' THEN
		SQLSTR := SQLSTR || ' AND H.MRHSTS <> ''P''';
	END IF;
	IF V_MRHID IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND D.MRHID = ''' || V_MRHID || '''';
	END IF;
	SQLSTR := SQLSTR || ' ORDER BY D.MRDDDATE DESC';

	OPEN OUTCUR FOR SQLSTR;
	RETURN OUTCUR;
END NHS_LIS_MEDRCDHIS;
/
