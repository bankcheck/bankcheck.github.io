create or replace FUNCTION "NHS_ACT_MEDDISTRANSFER" (
	i_ACTION   IN VARCHAR2,
	i_USRID    IN VARCHAR2,
	i_SENDSMS  IN VARCHAR2,
	i_DISPATCH IN TEMPLATE_OBJ_TAB,
	o_ERRMSG   OUT VARCHAR2
)
RETURN NUMBER AS
	o_ERRCODE NUMBER(10);
	v_PATNO VARCHAR2(10);
	v_VOLNUM VARCHAR2(10);
	v_NEWDTLID NUMBER(10);
	v_MRHID NUMBER(10);
	v_MRLID_S NUMBER(10);
	v_MRLID_L MEDRECDTL.MRLID_L%TYPE;
	v_DOCCODE MEDRECDTL.DOCCODE%TYPE;
	v_MRHSTS VARCHAR2(1);
	v_CNT NUMBER(10);
	v_CONDITION NUMBER(10);
	v_STECODE VARCHAR2(4);
	-- LOG
	o_errcode2	NUMBER;
	v_SYSLOG_REMARK	SYSLOG.REMARK%TYPE;
	EMPTY_LOCATION EXCEPTION;
	EMPTY_DOCCODE EXCEPTION;
	O_ERRMSG2 VARCHAR2(100);
BEGIN
	o_ERRCODE := 0;
	o_ERRMSG  := '';
	v_STECODE := GET_CURRENT_STECODE();

	FOR I IN 1..i_DISPATCH.COUNT LOOP
		v_CNT := REGEXP_INSTR(i_DISPATCH(I).COLUMN01, '[/]');

		IF v_CNT = 0 THEN
			SELECT COUNT(1) INTO v_CNT
			FROM   MEDRECHDR H, MEDRECDTL D
			WHERE  H.MRDID = D.MRDID
			AND    PATNO = i_DISPATCH(I).COLUMN01
			AND    MRHVOLLAB IS NULL
			AND    MRHSTS <> 'P';

			v_CONDITION := 1;
		ELSE
			v_PATNO := SUBSTR(i_DISPATCH(I).COLUMN01, 1, REGEXP_INSTR(i_DISPATCH(I).COLUMN01, '[/]')-1);
			v_VOLNUM := SUBSTR(i_DISPATCH(I).COLUMN01, REGEXP_INSTR(i_DISPATCH(I).COLUMN01, '[/]')+1, LENGTH(i_DISPATCH(I).COLUMN01));

			IF LENGTH(v_VOLNUM) = 0 THEN
				SELECT COUNT(1) INTO v_CNT
				FROM   MEDRECHDR H, MEDRECDTL D
				WHERE  H.MRDID = D.MRDID
				AND    PATNO = v_PATNO
				AND    MRHVOLLAB IS NULL
				AND    MRHSTS <> 'P';

				v_CONDITION := 2;
			ELSE
				SELECT COUNT(1) INTO v_CNT
				FROM   MEDRECHDR H, MEDRECDTL D
				WHERE  H.MRDID = D.MRDID
				AND    PATNO = v_PATNO
				AND    MRHVOLLAB = v_VOLNUM
				AND    MRHSTS <> 'P';

				v_CONDITION := 3;
			END IF;
		END IF;

		IF v_CNT = 0 THEN
			o_ERRMSG := o_ERRMSG || TO_CHAR(I - 1) || '_';
			CONTINUE;
		END IF;

		IF v_CONDITION = 1 THEN
			SELECT H.MRHID, H.MRHSTS, D.MRLID_S INTO v_MRHID, v_MRHSTS, v_MRLID_S
			FROM   MEDRECHDR H, MEDRECDTL D
			WHERE  H.MRDID = D.MRDID
			AND    PATNO = i_DISPATCH(I).COLUMN01
			AND    MRHVOLLAB IS NULL
			AND    MRHSTS <> 'P';
		ELSIF v_CONDITION = 2 THEN
			SELECT H.MRHID, H.MRHSTS, D.MRLID_S INTO v_MRHID, v_MRHSTS, v_MRLID_S
			FROM   MEDRECHDR H, MEDRECDTL D
			WHERE  H.MRDID = D.MRDID
			AND    PATNO = v_PATNO
			AND    MRHVOLLAB IS NULL
			AND    MRHSTS <> 'P';
		ELSIF v_CONDITION = 3 THEN
			SELECT H.MRHID, H.MRHSTS, D.MRLID_S INTO v_MRHID, v_MRHSTS, v_MRLID_S
			FROM   MEDRECHDR H, MEDRECDTL D
			WHERE  H.MRDID = D.MRDID
			AND    PATNO = v_PATNO
			AND    MRHVOLLAB = v_VOLNUM
			AND    MRHSTS <> 'P';
		END IF;
/*
		IF  I_DISPATCH(I).COLUMN06 IS NULL OR LENGTH(I_DISPATCH(I).COLUMN06) = 0 THEN
			O_ERRMSG := O_ERRMSG ||'EMPTY LOCATION'|| TO_CHAR(I - 1) || '_';
			RAISE EMPTY_LOCATION;
		END IF;
*/
		v_MRLID_L := i_DISPATCH(I).COLUMN06;
		v_DOCCODE := i_DISPATCH(I).COLUMN07;

		IF v_MRLID_L IS NULL OR LENGTH(v_MRLID_L) = 0 THEN
			v_MRLID_L:=SUBSTR(i_DISPATCH(I).COLUMN02, INSTR(i_DISPATCH(I).COLUMN02,' ')+1);
		END IF;

		IF v_MRLID_L IS NULL OR LENGTH(v_MRLID_L) = 0 THEN
			o_ERRCODE := -1;
			o_ERRMSG := 'Medical location cannot NULL';
			RAISE EMPTY_LOCATION;
		END IF;

		IF (v_DOCCODE IS NULL OR LENGTH(v_DOCCODE) = 0) AND v_STECODE = 'HKAH' THEN
			o_ERRCODE := -1;
			o_ERRMSG := 'Doctor code cannot NULL';
			RAISE EMPTY_DOCCODE;
		END IF;

		IF v_MRHID IS NULL OR LENGTH(v_MRHID) = 0 THEN
			o_ERRMSG := o_ERRMSG || TO_CHAR(I - 1) || '_';
			-- CONTINUE;
			RETURN -2;
		ELSIF v_MRHSTS <> 'N' THEN
			o_ERRMSG := o_ERRMSG || TO_CHAR(I - 1) || '_';
			--CONTINUE;
			RETURN -3;
		ELSIF v_MRHSTS = 'N' THEN
			SELECT SEQ_MEDRECDTL.NEXTVAL INTO v_NEWDTLID FROM DUAL;

			UPDATE MEDRECHDR
			SET    MRDID = v_NEWDTLID
			WHERE  MRHID = v_MRHID;

			INSERT INTO MEDRECDTL (
				MRDID, MRHID, MRDSTS,
				MRDDDATE,
				MRDRDATE, MRLID_S, MRLID_L, DOCCODE,
				MRDRMK, USRID, MRLID_R, REQLOC)
			VALUES (
				v_NEWDTLID, v_MRHID, 'T',
				DECODE(i_DISPATCH(I).COLUMN05, NULL, SYSDATE, TO_DATE(i_DISPATCH(I).COLUMN05, 'DD/MM/YYYY HH24:MI:SS')),
				NULL, v_MRLID_S, v_MRLID_L, i_DISPATCH(I).COLUMN07,
				i_DISPATCH(I).COLUMN04, i_USRID, NULL, NULL);

			v_syslog_remark := 'Insert MEDRECDTL MRDID=' || v_NEWDTLID || ',MRDID=' || v_MRHID||'[i_DISPATCH(I).COLUMN06]:'||i_DISPATCH(I).COLUMN06;
			o_errcode2 := NHS_ACT_SYSLOG('ADD', 'MedicalRecord', 'Dispatch/Batch Transfer', v_syslog_remark, i_USRID, NULL, o_errmsg2);
		END IF;

		IF i_SENDSMS = 'Y' AND v_PATNO IS NOT NULL THEN
			o_errcode2 := NHS_ACT_PATIENTACTIVITYLOG('ADD', v_PATNO, 'SMS', 'PTT', 'From Medical Record', i_USRID, NULL, o_errmsg2);
		END IF;
	END LOOP;

--	o_ERRMSG := '';
	RETURN o_ERRCODE;
EXCEPTION
WHEN EMPTY_LOCATION THEN
	ROLLBACK;
  DBMS_OUTPUT.PUT_LINE('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	O_ERRMSG := 'An ERROR was encountered - EMPTY LOCATION';
	RETURN -4;
WHEN EMPTY_DOCCODE THEN
	ROLLBACK;
  DBMS_OUTPUT.PUT_LINE('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	O_ERRMSG := 'An ERROR was encountered - EMPTY DOCCODE';
	RETURN -4;
WHEN OTHERS THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	o_ERRMSG := 'An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM;
	RETURN -1;
END NHS_ACT_MEDDISTRANSFER;
/
