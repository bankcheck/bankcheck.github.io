CREATE OR REPLACE FUNCTION NHS_ACT_MEDRECDTL_MOV (
   	V_ACTION IN VARCHAR2,
	V_PATNO VARCHAR2,
	V_MRDID VARCHAR2,
	V_TO_MRHVOLLAB VARCHAR2,
	O_ERRMSG  OUT VARCHAR2
)
	RETURN NUMBER
AS
    O_ERRCODE NUMBER(3);
    V_COUNT INTEGER;
	
    V_FM_MRHVOLLAB MEDRECHDR.MRHVOLLAB%TYPE;
	V_FM_MRHID MEDRECHDR.MRHID%TYPE;
	V_FM_MRDID_LATEST MEDRECHDR.MRDID%TYPE;
	V_TO_MRHID MEDRECHDR.MRHID%TYPE;
	V_TO_MRDID_LATEST MEDRECHDR.MRDID%TYPE;

	SRC_HDR_NOT_FOUND EXCEPTION;
	DEST_HDR_NOT_FOUND EXCEPTION;
	SRC_VOL_MORE_THAN_ONE EXCEPTION;
	DEST_VOL_MORE_THAN_ONE EXCEPTION;
	SRC_MRDID_NOT_MATCH EXCEPTION;
BEGIN
	O_ERRCODE := -1;
	
	BEGIN
		SELECT MRHID, MRHVOLLAB 
			INTO V_FM_MRHID, V_FM_MRHVOLLAB 
		FROM MEDRECHDR WHERE MRHID IN (
			SELECT MRHID FROM MEDRECDTL WHERE MRDID = V_MRDID);
	EXCEPTION
	    WHEN NO_DATA_FOUND THEN
	    	RAISE SRC_HDR_NOT_FOUND;
		WHEN TOO_MANY_ROWS THEN
			RAISE SRC_VOL_MORE_THAN_ONE;
	END;
	
	SELECT COUNT(1) INTO V_COUNT FROM MEDRECHDR H JOIN MEDRECDTL D ON H.MRHID = D.MRHID WHERE D.MRDID = V_MRDID AND H.PATNO = V_PATNO;
	IF V_COUNT = 0 THEN
		RAISE SRC_MRDID_NOT_MATCH;
	END IF;
	
	IF v_action = 'DEL' THEN
		DELETE FROM MEDRECDTL WHERE MRDID = V_MRDID;
		
		SELECT MAX(MRDID) KEEP (DENSE_RANK LAST ORDER BY MRDDDATE) MRDID INTO V_FM_MRDID_LATEST FROM MEDRECDTL WHERE MRHID = V_FM_MRHID;
		UPDATE MEDRECHDR SET MRDID = V_FM_MRDID_LATEST WHERE MRHID = V_FM_MRHID;
		
		O_ERRMSG  := 'Deleted MRDID: ' || V_MRDID || ' in ' || V_PATNO || '/' || V_FM_MRHVOLLAB;
		O_ERRCODE := 0;
	ELSE
		BEGIN
			SELECT MRHID 
				INTO V_TO_MRHID 
			FROM MEDRECHDR WHERE PATNO = V_PATNO AND MRHVOLLAB = V_TO_MRHVOLLAB;
		EXCEPTION
		    WHEN NO_DATA_FOUND THEN
		    	RAISE DEST_HDR_NOT_FOUND;	
			WHEN TOO_MANY_ROWS THEN
				RAISE DEST_VOL_MORE_THAN_ONE;
		END;
		
		UPDATE MEDRECDTL SET MRHID = V_TO_MRHID WHERE MRDID = V_MRDID;
		
		-- FIND NEW LATEST MRDID
		SELECT MAX(MRDID) KEEP (DENSE_RANK LAST ORDER BY MRDDDATE) MRDID INTO V_FM_MRDID_LATEST FROM MEDRECDTL WHERE MRHID = V_FM_MRHID;
		SELECT MAX(MRDID) KEEP (DENSE_RANK LAST ORDER BY MRDDDATE) MRDID INTO V_TO_MRDID_LATEST FROM MEDRECDTL WHERE MRHID = V_TO_MRHID;
		
		UPDATE MEDRECHDR SET MRDID = V_FM_MRDID_LATEST WHERE MRHID = V_FM_MRHID;
		UPDATE MEDRECHDR SET MRDID = V_TO_MRDID_LATEST WHERE MRHID = V_TO_MRHID;
		
		O_ERRMSG  := 'Moved MRDID: ' || V_MRDID || ' to Vol: ' || V_TO_MRHVOLLAB;
		O_ERRCODE := 0;
	END IF;
	
	RETURN O_ERRCODE;
EXCEPTION
    WHEN SRC_HDR_NOT_FOUND THEN
    	O_ERRMSG  := 'Cannot find MEDREC header by MRDID: ' || V_MRDID;
    	O_ERRCODE := -11;
    	RETURN O_ERRCODE;
    WHEN DEST_HDR_NOT_FOUND THEN
    	O_ERRMSG  := 'Cannot find MEDREC header for dest vol: ' || V_TO_MRHVOLLAB;
    	O_ERRCODE := -12;
    	RETURN O_ERRCODE;
    WHEN SRC_VOL_MORE_THAN_ONE THEN
    	O_ERRMSG  := 'More than one record for MRDID: ' || V_MRDID;
    	O_ERRCODE := -21;
    	RETURN O_ERRCODE;
    WHEN DEST_VOL_MORE_THAN_ONE THEN
    	O_ERRMSG  := 'More than one record for dest vol: ' || V_FM_MRHVOLLAB;    
    	O_ERRCODE := -22;
    	RETURN O_ERRCODE;
    WHEN SRC_MRDID_NOT_MATCH THEN
    	O_ERRMSG  := 'MRDID: ' || V_MRDID || ' is not belong to patient no: ' || V_PATNO;    
    	O_ERRCODE := -31;
    	RETURN O_ERRCODE;
	WHEN OTHERS THEN
		O_ERRMSG := 'ERROR';
	RETURN O_ERRCODE;
END NHS_ACT_MEDRECDTL_MOV;
/
