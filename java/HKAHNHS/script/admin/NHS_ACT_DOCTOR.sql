create or replace FUNCTION "NHS_ACT_DOCTOR" (
	v_action            IN VARCHAR2,
	v_DOCCODE           IN VARCHAR2,
	v_DOCFNAME          IN VARCHAR2,
	v_DOCGNAME          IN VARCHAR2,
	v_DOCCNAME          IN VARCHAR2,
	v_DOCIDNO           IN VARCHAR2,
	v_DOCSEX            IN VARCHAR2,
	v_SPCCODE           IN VARCHAR2,
	v_DOCSTS            IN VARCHAR2,
	v_DOCTYPE           IN VARCHAR2,
	v_DOCPCT_I          IN VARCHAR2,
	v_DOCPCT_O          IN VARCHAR2,
	v_DOCPCT_D          IN VARCHAR2,
	v_DOCADD1           IN VARCHAR2,
	v_DOCADD2           IN VARCHAR2,
	v_DOCADD3           IN VARCHAR2,
	v_DOCHTEL           IN VARCHAR2,
	v_DOCOTEL           IN VARCHAR2,
	v_DOCPTEL           IN VARCHAR2,
	v_DOCTSLOT          IN VARCHAR2,
	v_DOCQUALI          IN VARCHAR2,
	v_DOCTDATE          IN VARCHAR2,
	v_DOCSDATE          IN VARCHAR2,
	v_DOCHOMADD1        IN VARCHAR2,
	v_DOCHOMADD2        IN VARCHAR2,
	v_DOCHOMADD3        IN VARCHAR2,
	v_DOCOFFADD1        IN VARCHAR2,
	v_DOCOFFADD2        IN VARCHAR2,
	v_DOCOFFADD3        IN VARCHAR2,
	v_DOCCSHOLY         IN VARCHAR2,
	v_DOCMTEL           IN VARCHAR2,
	v_DOCEMAIL          IN VARCHAR2,
	v_DOCFAXNO          IN VARCHAR2,
	v_DOCHOMADD4        IN VARCHAR2,
	v_DOCADD4           IN VARCHAR2,
	v_DOCOFFADD4        IN VARCHAR2,
	v_DOCPICKLIST       IN VARCHAR2,
	v_DOCQUALIFY        IN VARCHAR2,
	v_DOCBDATE          IN VARCHAR2,
	v_RPTTO             IN VARCHAR2,
	v_ISDOCTOR          IN VARCHAR2,
	v_TITTLE            IN VARCHAR2,
	v_ISOTSURGEON       IN VARCHAR2,
	v_ISOTANESTHETIST   IN VARCHAR2,
	v_SHOWPROFILE       IN VARCHAR2,
	v_STODECLARATION    IN VARCHAR2,
	v_BRNO              IN VARCHAR2,
	v_REMARKS           IN VARCHAR2,
	v_cpsdate           IN VARCHAR2,
	v_apldate           IN VARCHAR2,
	v_mpscdate          IN VARCHAR2,
	v_sldate            IN VARCHAR2,
	v_ISENDOSCOPIST     IN VARCHAR2,
	v_TEXT1             IN VARCHAR2,
	v_TEXT2             IN VARCHAR2,
	v_TEXT3             IN VARCHAR2,
	v_TEXT4             IN VARCHAR2,
	v_TEXT5             IN VARCHAR2,
	v_TEXT6             IN VARCHAR2,
	v_TEXT7             IN VARCHAR2,
	v_TEXT8             IN VARCHAR2,
	v_TEXT9             IN VARCHAR2,
	v_TEXT10            IN VARCHAR2,
	v_CTEXT1            IN VARCHAR2,
	v_CTEXT2            IN VARCHAR2,
	v_CTEXT3            IN VARCHAR2,
	v_CTEXT4            IN VARCHAR2,
	v_CTEXT5            IN VARCHAR2,
	v_CTEXT6            IN VARCHAR2,
	v_CTEXT7            IN VARCHAR2,
	v_CTEXT8            IN VARCHAR2,
	v_CTEXT9            IN VARCHAR2,
	v_CTEXT10           IN VARCHAR2,
	v_ISPOSTSCHEDULE    IN VARCHAR2,
	v_RECEIVEPROMO      IN VARCHAR2,
	v_RECEIVEPROMOBYFAX IN VARCHAR2,
	v_HKMCLICNO         IN VARCHAR2,
	v_CLINSDATE         IN VARCHAR2,
	v_OPPSDATE          IN VARCHAR2,
	v_OPPEDATE          IN VARCHAR2,
	v_DOCINSURCOMP      IN VARCHAR2,
	v_COMPANY           IN VARCHAR2,
	v_MSTRDOCCODE       IN VARCHAR2,
	v_EHRUID            IN VARCHAR2,
  v_HKMANO            IN VARCHAR2,
  v_MPSNO             IN VARCHAR2,
	v_SITECODE          IN VARCHAR2,
	v_USRID             IN VARCHAR2,
	o_errmsg            OUT VARCHAR2
)
	RETURN NUMBER
AS
	O_ERRCODE NUMBER;
	o_rtncode NUMBER;
	o_NOOFREC NUMBER;
	o_NOOFCERTREC NUMBER;
	v_dCODE DOCTOR.DOCCODE%TYPE;
--	o_doccode number;
	DOCTOR_PRIVILEGE EXCEPTION;
	DOCTOR_DEPT EXCEPTION;
	DOCTOR_SPECIALTY EXCEPTION;
	DOCTOR_QUALIFICATION EXCEPTION;
	DOCTOR_BASICSALARY EXCEPTION;
	DOCTOR_ITEMSHARE EXCEPTION;
	DOCTOR_APPROVAL EXCEPTION;
	DOCTOR_UPDATE EXCEPTION;
	DOCTOR_DOCCERT EXCEPTION;
	DOCTOR_DOCTOR_NO_MSTR EXCEPTION;
BEGIN
	o_errcode := 0;
	o_errmsg := 'OK';
--	o_doccode := TO_NUMBER(v_DOCCODE);
	SELECT COUNT(1) INTO o_noOfRec FROM DOCTOR WHERE doccode = v_DOCCODE;

/* --- Copy file when link with master docotr
1.      Home Address
2.      Email
3.      Pager
4.      Mobile Phone
5.      Home Phone
6.      Privilege
7.      Qualification
8.      Cert (Eng). Cert (Chi)
9.      Approval
10.   Ref Date Annual Practicing License Date

Malpractice Insurance Expiry
Admission Expiry Date
Insurance Company
*/

	IF v_action = 'ADD' THEN
		IF o_noOfRec = 0 THEN
--			select SEQ_DOCTOR.NEXTVAL into v_DOCCODE from dual;
			IF v_MSTRDOCCODE IS NOT NULL THEN
			INSERT INTO DOCTOR (
				DOCCODE,
				DOCFNAME,
				DOCGNAME,
				DOCCNAME,
				DOCIDNO,
				DOCSEX,
				SPCCODE,
				DOCSTS,
				DOCTYPE,
				DOCPCT_I,
				DOCPCT_O,
				DOCPCT_D,
				DOCADD1,
				DOCADD2,
				DOCADD3,
				DOCHTEL,
				DOCOTEL,
				DOCPTEL,
				DOCTSLOT,
				DOCQUALI,
				DOCTDATE,
				DOCSDATE,
				DOCHOMADD1,
				DOCHOMADD2,
				DOCHOMADD3,
				DOCOFFADD1,
				DOCOFFADD2,
				DOCOFFADD3,
				DOCCSHOLY,
				DOCMTEL,
				DOCEMAIL,
				DOCFAXNO,
				DOCHOMADD4,
				DOCADD4,
				DOCOFFADD4,
				DOCPICKLIST,
				USRID,
				DOCQUALIFY,
				DOCBDATE,
				RPTTO,
				ISDOCTOR,
				TITTLE,
				ISOTSURGEON,
				ISOTANESTHETIST,
				SHOWPROFILE,
				DAYINSTRUCTION,
				INPINSTRUCTION,
				OUPINSTRUCTION,
				PAYINSTRUCTION,
				BRNO,
				DOCREMARK,
				CPSDATE,
				APLDATE,
				MPSCDATE,
				SLDATE,
				ISOTENDOSCOPIST,
				COMPANY,
				MSTRDOCCODE,
				EHRUID
			) VALUES (
				v_DOCCODE,
				v_DOCFNAME,
				v_DOCGNAME,
				v_DOCCNAME,
				v_DOCIDNO,
				v_DOCSEX,
				v_SPCCODE,
				TO_NUMBER(v_DOCSTS),
				v_DOCTYPE,
				TO_NUMBER(v_DOCPCT_I),
				TO_NUMBER(v_DOCPCT_O),
				TO_NUMBER(v_DOCPCT_D),
				v_DOCADD1,
				v_DOCADD2,
				v_DOCADD3,
				v_DOCHTEL,
				v_DOCOTEL,
				v_DOCPTEL,
				TO_NUMBER(v_DOCTSLOT),
				v_DOCQUALI,
				v_DOCTDATE,
				v_DOCSDATE,
				v_DOCHOMADD1,
				v_DOCHOMADD2,
				v_DOCHOMADD3,
				v_DOCOFFADD1,
				v_DOCOFFADD2,
				v_DOCOFFADD3,
				TO_NUMBER(v_DOCCSHOLY),
				v_DOCMTEL,
				v_DOCEMAIL,
				v_DOCFAXNO,
				v_DOCHOMADD4,
				v_DOCADD4,
				v_DOCOFFADD4,
				TO_NUMBER(v_DOCPICKLIST),
				null,
				TO_NUMBER(v_DOCQUALIFY),
				v_DOCBDATE,
				v_RPTTO,
				TO_NUMBER(v_ISDOCTOR),
				v_TITTLE,
				TO_NUMBER(v_ISOTSURGEON),
				TO_NUMBER(v_ISOTANESTHETIST),
				TO_NUMBER(v_SHOWPROFILE),
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				NULL,
				NULL,
				NULL,
				NULL,
				NULL,
				v_MSTRDOCCODE,
				v_EHRUID
			);

			-- DOCTOR_EXTRA
			SELECT count(1) into o_noOfRec from doctor_extra where doccode= v_doccode;
			IF o_noOfRec = 0 THEN
				INSERT INTO DOCTOR_EXTRA
				(DOCCODE, STODECLARATION, DOC_CREATED_DATE, DOC_CREATED_USER, DOC_UPDATED_DATE, DOC_UPDATED_USER, HKMANO, MPSNO)
				VALUES
				(V_DOCCODE, TO_NUMBER(v_STODECLARATION), SYSDATE, v_USRID, SYSDATE, v_USRID, v_HKMANO, v_MPSNO);
			ELSE
				UPDATE DOCTOR_EXTRA set
					STODECLARATION = TO_NUMBER(v_STODECLARATION),
					DOC_CREATED_DATE = SYSDATE,
					DOC_CREATED_USER = v_USRID,
					DOC_UPDATED_DATE = SYSDATE,
					DOC_UPDATED_USER = v_USRID,
          HKMANO = v_HKMANO,
          MPSNO = v_MPSNO
				WHERE DOCCODE = V_DOCCODE;
			END IF;

			-- DOCTOR PRIVILEGE
			BEGIN
				INSERT INTO DOCPRILINK
				(DPLID,DOCCODE,PRICODE,DPLSDATE,DPLTDATE)
				SELECT
					SEQ_DOCPRILINK.NEXTVAL,v_DOCCODE,PRICODE,DPLSDATE,DPLTDATE
				FROM DOCPRILINK
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_PRIVILEGE]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, V_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_PRIVILEGE;
			END;

			-- DOCTOR QUALIFICATION
			BEGIN
				INSERT INTO DOCQLFLINK
				(DQLID,DOCCODE,QLFID,DQLIDATE)
				SELECT
					SEQ_DOCQLFLINK.NEXTVAL,v_DOCCODE,QLFID,DQLIDATE
				FROM DOCQLFLINK
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_QUALIFICATION]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, V_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_QUALIFICATION;
			END;

			-- DOCTOR APPROVAL
			BEGIN
				INSERT INTO DOCAPVLINK
				(DALID,DOCCODE,CMTNAME,ACTNO,APVDATE)
				SELECT
				SEQ_DOCAPVLINK.NEXTVAL,v_DOCCODE,CMTNAME,ACTNO,APVDATE
				FROM DOCAPVLINK
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_APPROVAL]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, V_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_APPROVAL;
			END;
/*
			-- DOCTOR DEPT
			BEGIN
				INSERT INTO DOCDPTLINK
				(DDLID,DOCCODE,DPTCODE)
				SELECT
					SEQ_DOCDPTLINK.NEXTVAL,v_DOCCODE,DPTCODE
				FROM DOCDPTLINK
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_DEPT]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, v_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_DEPT;
			END;
*/
/*
			-- DOCTOR SPECIALTY
			BEGIN
				INSERT INTO DOCSPCLINK
				(DSLID,DOCCODE,SPCCODE,ISOFFICIAL)
				SELECT
					SEQ_docspclink.NEXTVAL,
					v_DOCCODE,
					SPCCODE,
					ISOFFICIAL
				FROM DOCSPCLINK
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR',';[DOCTOR_SPECIALTY]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, v_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_SPECIALTY;
			END;
*/
/*
			-- DOCTOR BASICSALARY
			BEGIN
				INSERT INTO DOCBASSAL
				(DBSID,DOCCODE,DBSAMT,DBSSDATE,DBSEDATE)
				SELECT
					SEQ_DOCBASSAL.NEXTVAL,v_DOCCODE,DBSAMT,DBSSDATE,DBSEDATE
				FROM DOCBASSAL
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				RAISE DOCTOR_BASICSALARY;
			END;
*/
/*
			-- DOCTOR ITEMSHARE
			BEGIN
				INSERT INTO DOCITMPCT
				(DIPID,DOCCODE,SLPTYPE,PCYID,DSCCODE,ITMCODE,DIPPCT,DIPFIX,STECODE)
				SELECT
					SEQ_DOCITMPCT.NEXTVAL,v_DOCCODE,SLPTYPE,PCYID,DSCCODE,ITMCODE,DIPPCT,DIPFIX,STECODE
				FROM DOCITMPCT
				WHERE DOCCODE = v_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_ITEMSHARE]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, v_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_ITEMSHARE;
			END;
*/
			-- CERT(ENG) & CERT(CHI)
			BEGIN
				UPDATE DOCTOR D1
				SET
--					DOCCODE = v_DOCCODE,
--					DOCFNAME = v_DOCFNAME,
--					DOCGNAME = v_DOCGNAME,
					DOCCNAME = (SELECT D2.DOCCNAME FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCIDNO = (SELECT D2.DOCIDNO FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCSEX = v_DOCSEX,
--					SPCCODE = v_SPCCODE,
--					DOCSTS = (SELECT D2.DOCSTS FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCTYPE = v_DOCTYPE,
--					DOCPCT_I = TO_NUMBER(v_DOCPCT_I),
--					DOCPCT_O = TO_NUMBER(v_DOCPCT_O),
--					DOCPCT_D = TO_NUMBER(v_DOCPCT_D),
--					DOCADD1 = (SELECT D2.DOCADD1 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCADD2 = (SELECT D2.DOCADD2 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCADD3 = (SELECT D2.DOCADD3 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCHTEL = (SELECT D2.DOCHTEL FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCOTEL = (SELECT D2.DOCOTEL FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCPTEL = v_DOCPTEL,
--					DOCTSLOT = TO_NUMBER(v_DOCTSLOT),
--					DOCQUALI = (SELECT D2.DOCQUALI FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCTDATE = (SELECT D2.DOCTDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCSDATE = (SELECT D2.DOCSDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCHOMADD1 = (SELECT D2.DOCHOMADD1 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCHOMADD2 = (SELECT D2.DOCHOMADD2 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCHOMADD3 = (SELECT D2.DOCHOMADD3 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCOFFADD1 = (SELECT D2.DOCOFFADD1 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCOFFADD2 = (SELECT D2.DOCOFFADD2 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCOFFADD3 = (SELECT D2.DOCOFFADD3 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCCSHOLY = (SELECT D2.DOCCSHOLY FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCMTEL = (SELECT D2.DOCMTEL FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCEMAIL = (SELECT D2.DOCEMAIL FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCFAXNO = (SELECT D2.DOCFAXNO FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCHOMADD4 = (SELECT D2.DOCHOMADD4 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCADD4 = (SELECT D2.DOCADD4 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCOFFADD4 = (SELECT D2.DOCOFFADD4 FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCPICKLIST = (SELECT D2.DOCPICKLIST FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					USRID = v_USRID,
--					DOCQUALIFY = (SELECT D2.DOCQUALIFY FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					DOCBDATE = (SELECT D2.DOCBDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					RPTTO = 'C', -- CONTACT_VALUE = "C";
--					ISDOCTOR = (SELECT D2.ISDOCTOR FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					TITTLE = (SELECT D2.TITTLE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					ISOTSURGEON = (SELECT D2.ISOTSURGEON FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					ISOTANESTHETIST = (SELECT D2.ISOTANESTHETIST FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					SHOWPROFILE = (SELECT D2.SHOWPROFILE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					BRNO = (SELECT D2.BRNO FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					DOCREMARK = (SELECT D2.DOCREMARK FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					CPSDATE = (SELECT D2.CPSDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					APLDATE = (SELECT D2.APLDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					MPSCDATE = (SELECT D2.MPSCDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					SLDATE = (SELECT D2.SLDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					ISOTENDOSCOPIST = (SELECT D2.ISOTENDOSCOPIST FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					ISPOSTSCHEDULE = (SELECT D2.ISPOSTSCHEDULE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					RECEIVEPROMO = (SELECT D2.RECEIVEPROMO FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					RECEIVEPROMOBYFAX = (SELECT D2.RECEIVEPROMOBYFAX FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					HKMCLICNO = (SELECT D2.HKMCLICNO FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					CLINSDATE = (SELECT D2.CLINSDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					OPPSDATE = (SELECT D2.OPPSDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
--					OPPEDATE = (SELECT D2.OPPEDATE FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE)
--					DOCINSURCOMP = (SELECT D2.DOCINSURCOMP FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE),
					EHRUID = (SELECT D2.EHRUID FROM DOCTOR D2 WHERE D2.DOCCODE = v_MSTRDOCCODE)
				WHERE DOCCODE = v_DOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				RAISE DOCTOR_APPROVAL;
			END;

			-- CERT(ENG) & CERT(CHI)
			BEGIN
				INSERT INTO DOCCERT
				SELECT
					v_DOCCODE,
					ECERT1,
					ECERT2,
					ECERT3,
					ECERT4,
					ECERT5,
					ECERT6,
					ECERT7,
					ECERT8,
					ECERT9,
					ECERT10,
					CCERT1,
					CCERT2,
					CCERT3,
					CCERT4,
					CCERT5,
					CCERT6,
					CCERT7,
					CCERT8,
					CCERT9,
					CCERT10
				FROM DOCCERT
				WHERE DOCCODE= V_MSTRDOCCODE;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR',';[DOCTOR_PRIVILEGE]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, V_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_DOCCERT;
			END;
		ELSE
			BEGIN
				INSERT INTO DOCTOR (
					DOCCODE,
					DOCFNAME,
					DOCGNAME,
					DOCCNAME,
					DOCIDNO,
					DOCSEX,
					SPCCODE,
					DOCSTS,
					DOCTYPE,
					DOCPCT_I,
					DOCPCT_O,
					DOCPCT_D,
					DOCADD1,
					DOCADD2,
					DOCADD3,
					DOCHTEL,
					DOCOTEL,
					DOCPTEL,
					DOCTSLOT,
					DOCQUALI,
					DOCTDATE,
					DOCSDATE,
					DOCHOMADD1,
					DOCHOMADD2,
					DOCHOMADD3,
					DOCOFFADD1,
					DOCOFFADD2,
					DOCOFFADD3,
					DOCCSHOLY,
					DOCMTEL,
					DOCEMAIL,
					DOCFAXNO,
					DOCHOMADD4,
					DOCADD4,
					DOCOFFADD4,
					DOCPICKLIST,
					USRID,
					DOCQUALIFY,
					DOCBDATE,
					RPTTO,
					ISDOCTOR,
					TITTLE,
					ISOTSURGEON,
					ISOTANESTHETIST,
					SHOWPROFILE,
					DAYINSTRUCTION,
					INPINSTRUCTION,
					OUPINSTRUCTION,
					PAYINSTRUCTION,
					BRNO,
					DOCREMARK,
					CPSDATE,
					APLDATE,
					MPSCDATE,
					SLDATE,
					ISOTENDOSCOPIST,
					COMPANY,
					MSTRDOCCODE,
					EHRUID
				) VALUES (
					v_DOCCODE,
					v_DOCFNAME,
					v_DOCGNAME,
					v_DOCCNAME,
					v_DOCIDNO,
					v_DOCSEX,
					v_SPCCODE,
					TO_NUMBER(v_DOCSTS),
					v_DOCTYPE,
					TO_NUMBER(v_DOCPCT_I),
					TO_NUMBER(v_DOCPCT_O),
					TO_NUMBER(v_DOCPCT_D),
					v_DOCADD1,
					v_DOCADD2,
					v_DOCADD3,
					v_DOCHTEL,
					v_DOCOTEL,
					v_DOCPTEL,
					TO_NUMBER(v_DOCTSLOT),
					v_DOCQUALI,
					v_DOCTDATE,
					v_DOCSDATE,
					v_DOCHOMADD1,
					v_DOCHOMADD2,
					v_DOCHOMADD3,
					v_DOCOFFADD1,
					v_DOCOFFADD2,
					v_DOCOFFADD3,
					TO_NUMBER(v_DOCCSHOLY),
					v_DOCMTEL,
					v_DOCEMAIL,
					v_DOCFAXNO,
					v_DOCHOMADD4,
					v_DOCADD4,
					v_DOCOFFADD4,
					TO_NUMBER(v_DOCPICKLIST),
					null,
					TO_NUMBER(v_DOCQUALIFY),
					v_DOCBDATE,
					v_RPTTO,
					TO_NUMBER(v_ISDOCTOR),
					v_TITTLE,
					TO_NUMBER(v_ISOTSURGEON),
					TO_NUMBER(v_ISOTANESTHETIST),
					TO_NUMBER(v_SHOWPROFILE),
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					NULL,
					NULL,
					NULL,
					NULL,
					NULL,
					NULL,
					NULL
				);

				-- DOCTOR_EXTRA
				SELECT count(1) into o_noOfRec from doctor_extra where doccode= v_doccode;
				IF o_noOfRec = 0 THEN
					INSERT INTO DOCTOR_EXTRA
					(DOCCODE, STODECLARATION, DOC_CREATED_DATE, DOC_CREATED_USER, DOC_UPDATED_DATE, DOC_UPDATED_USER, HKMANO, MPSNO)
					VALUES
					(V_DOCCODE, TO_NUMBER(v_STODECLARATION), SYSDATE, v_USRID, SYSDATE, v_USRID, v_HKMANO, v_MPSNO);
				ELSE
					UPDATE DOCTOR_EXTRA set
						STODECLARATION = TO_NUMBER(v_STODECLARATION),
						DOC_CREATED_DATE = SYSDATE,
						DOC_CREATED_USER = v_USRID,
						DOC_UPDATED_DATE = SYSDATE,
						DOC_UPDATED_USER = v_USRID,
            HKMANO = v_HKMANO,
            MPSNO = v_MPSNO
					WHERE DOCCODE = V_DOCCODE;
				END IF;

			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_DOCTOR_NO_MSTR]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, V_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_DOCTOR_NO_MSTR;
			END;
			END IF;
		ELSE
			o_errcode := -1;
			o_errmsg := 'Record already exists.';
		END IF;
	ELSIF V_ACTION = 'MOD' THEN
		IF O_NOOFREC > 0 THEN
			BEGIN
				UPDATE DOCTOR
				SET
--					DOCCODE = v_DOCCODE,
					DOCFNAME = v_DOCFNAME,
					DOCGNAME = v_DOCGNAME,
					DOCCNAME = v_DOCCNAME,
					DOCIDNO = v_DOCIDNO,
					DOCSEX = v_DOCSEX,
					SPCCODE = v_SPCCODE,
					DOCSTS = v_DOCSTS,
					DOCTYPE = v_DOCTYPE,
					DOCPCT_I = TO_NUMBER(v_DOCPCT_I),
					DOCPCT_O = TO_NUMBER(v_DOCPCT_O),
					DOCPCT_D = TO_NUMBER(v_DOCPCT_D),
					DOCADD1 = v_DOCADD1,
					DOCADD2 = v_DOCADD2,
					DOCADD3 = v_DOCADD3,
					DOCHTEL = v_DOCHTEL,
					DOCOTEL = v_DOCOTEL,
					DOCPTEL = v_DOCPTEL,
					DOCTSLOT = TO_NUMBER(v_DOCTSLOT),
					DOCQUALI = v_DOCQUALI,
					DOCTDATE = TO_DATE(v_DOCTDATE,'DD/MM/YYYY'),
					DOCSDATE = TO_DATE(v_DOCSDATE,'DD/MM/YYYY'),
					DOCHOMADD1 = v_DOCHOMADD1,
					DOCHOMADD2 = v_DOCHOMADD2,
					DOCHOMADD3 = v_DOCHOMADD3,
					DOCOFFADD1 = v_DOCOFFADD1,
					DOCOFFADD2 = v_DOCOFFADD2,
					DOCOFFADD3 = v_DOCOFFADD3,
					DOCCSHOLY = TO_NUMBER(v_DOCCSHOLY),-----
					DOCMTEL = v_DOCMTEL,
					DOCEMAIL = v_DOCEMAIL,
					DOCFAXNO = v_DOCFAXNO,
					DOCHOMADD4 = v_DOCHOMADD4,
					DOCADD4 = v_DOCADD4,
					DOCOFFADD4 = v_DOCOFFADD4,
					DOCPICKLIST = TO_NUMBER(v_DOCPICKLIST),-----
--					USRID = v_USRID,
					DOCQUALIFY = TO_NUMBER(v_DOCQUALIFY),-----
					DOCBDATE = TO_DATE(v_DOCBDATE, 'DD/MM/YYYY'),
					RPTTO = v_RPTTO,----
					ISDOCTOR = TO_NUMBER(v_ISDOCTOR),
					TITTLE = v_TITTLE,
					ISOTSURGEON = TO_NUMBER(v_ISOTSURGEON),--
					ISOTANESTHETIST = TO_NUMBER(v_ISOTANESTHETIST),--
					SHOWPROFILE = TO_NUMBER(v_SHOWPROFILE),--
					BRNO= v_brno,
					DOCREMARK= v_remarks,
					CPSDATE = TO_DATE(v_cpsdate, 'DD/MM/YYYY'),
					APLDATE = TO_DATE(v_apldate, 'DD/MM/YYYY'),
					MPSCDATE = TO_DATE(v_mpscdate, 'DD/MM/YYYY'),
					SLDATE = TO_DATE(v_SLDATE, 'DD/MM/YYYY'),
					ISOTENDOSCOPIST= v_ISENDOSCOPIST,
					ISPOSTSCHEDULE = v_ISPOSTSCHEDULE,
					RECEIVEPROMO = v_RECEIVEPROMO,
					RECEIVEPROMOBYFAX = v_RECEIVEPROMOBYFAX,
					HKMCLICNO = v_HKMCLICNO,
					CLINSDATE = TO_DATE(v_CLINSDATE, 'DD/MM/YYYY'),
					OPPSDATE = TO_DATE(v_OPPSDATE, 'DD/MM/YYYY'),
					OPPEDATE = TO_DATE(v_OPPEDATE, 'DD/MM/YYYY'),
					DOCINSURCOMP = V_DOCINSURCOMP,
					EHRUID = V_EHRUID,
					MSTRDOCCODE = V_MSTRDOCCODE,
					COMPANY = v_COMPANY
				WHERE DOCCODE = V_DOCCODE;

				-- DOCTOR_EXTRA
				SELECT count(1) into o_noOfRec from doctor_extra where doccode= v_doccode;
				IF o_noOfRec = 0 THEN
					INSERT INTO DOCTOR_EXTRA
					(DOCCODE, STODECLARATION, DOC_UPDATED_DATE, DOC_UPDATED_USER, HKMANO, MPSNO)
					VALUES
					(V_DOCCODE, TO_NUMBER(v_STODECLARATION), SYSDATE, v_USRID, v_HKMANO, v_MPSNO);
				ELSE
					UPDATE DOCTOR_EXTRA set
						STODECLARATION = TO_NUMBER(v_STODECLARATION),
						DOC_UPDATED_DATE = SYSDATE,
						DOC_UPDATED_USER = v_USRID,
            HKMANO = v_HKMANO,
            MPSNO = v_MPSNO
					WHERE DOCCODE = V_DOCCODE;
				END IF;
			EXCEPTION
			WHEN OTHERS THEN
				O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[DOCTOR_UPDATE]','[v_DOCCODE]:'||v_DOCCODE||';[ERROR@]' ||SQLCODE||' - '||SQLERRM, v_USRID, NULL, O_ERRMSG);
				o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
				RAISE DOCTOR_UPDATE;
			END;

			SELECT COUNT(1) INTO o_NOOFCERTREC FROM DOCCERT WHERE DOCCODE = v_DOCCODE;
			IF o_NOOFCERTREC = 0 THEN
				INSERT INTO DOCCERT (
					DOCCODE,ECERT1,ECERT2,ECERT3,ECERT4,ECERT5,ECERT6,ECERT7,ECERT8,ECERT9,ECERT10,
					CCERT1,CCERT2,CCERT3,CCERT4,CCERT5,CCERT6,CCERT7,CCERT8,CCERT9,CCERT10
				) VALUES (
					v_DOCCODE,v_TEXT1,v_TEXT2,v_TEXT3,v_TEXT4,v_TEXT5,v_TEXT6,v_TEXT7,v_TEXT8,v_TEXT8,v_TEXT10,
					v_ctext1,v_ctext2,v_ctext3,v_ctext4,v_ctext5,v_ctext6,v_ctext7,v_ctext8,v_ctext9,v_ctext10
				);
			ELSE
				UPDATE doccert
				SET
					ecert1 = v_text1,
					ecert2 = v_text2,
					ecert3 = v_text3,
					ecert4 = v_text4,
					ecert5 = v_text5,
					ecert6 = v_text6,
					ecert7 = v_text7,
					ecert8 = v_text8,
					ecert9 = v_text9,
					ecert10 = v_text10,
					ccert1 = v_ctext1,
					ccert2 = v_ctext2,
					ccert3 = v_ctext3,
					ccert4 = v_ctext4,
					ccert5 = v_ctext5,
					ccert6 = v_ctext6,
					ccert7 = v_ctext7,
					ccert8 = v_ctext8,
					ccert9 = v_ctext9,
					ccert10 = v_ctext10
				WHERE DOCCODE = v_DOCCODE;
			END IF;
		ELSE
			o_errcode := -1;
			O_ERRMSG := 'Fail to update due to record not exist.';
			o_rtncode := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[o_noOfRec]:'||O_NOOFREC,'[v_DOCCODE]:'||v_DOCCODE||';[Fail to update due to record not exist.]', V_USRID, NULL, O_ERRMSG);
		END IF;
	ELSIF v_action = 'DEL' THEN
		IF o_noOfRec > 0 THEN
			delete DOCTOR where doccode = v_DOCCODE;
		ELSE
			o_errcode := -1;
			O_ERRMSG := 'Fail to delete due to record not exist.';
			O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[o_noOfRec]:'||O_NOOFREC,'[v_DOCCODE]:'||v_DOCCODE||';[Fail to delete due to record not exist.]', V_USRID, NULL, O_ERRMSG);
		END IF;
	END IF;
RETURN o_ERRCODE;

EXCEPTION
WHEN DOCTOR_PRIVILEGE THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_PRIVILEGE]');
	RETURN -1;
WHEN DOCTOR_DEPT THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_DEPT]');
	return -1;
WHEN DOCTOR_UPDATE THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_UPDATE]');
	RETURN -1;
WHEN DOCTOR_SPECIALTY THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_SPECIALTY]');
	RETURN -1;
WHEN DOCTOR_QUALIFICATION THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_QUALIFICATION]');
	RETURN -1;
WHEN DOCTOR_ITEMSHARE THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_ITEMSHARE]');
	RETURN -1;
WHEN DOCTOR_APPROVAL THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_APPROVAL]');
	return -1;
WHEN DOCTOR_DOCCERT THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_DOCCERT]');
	RETURN -1;
WHEN DOCTOR_DOCTOR_NO_MSTR THEN
	ROLLBACK;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM||';[DOCTOR_DOCTOR_NO_MSTR]');
	RETURN -1;
WHEN OTHERS THEN
	ROLLBACK;
	O_RTNCODE := NHS_ACT_SYSLOG(V_ACTION, 'NHS_ACT_DOCTOR','[OTHER EXCEPTION]:','[ERROR@]' ||SQLCODE||' - '||SQLERRM, V_USRID, NULL, O_ERRMSG);
	o_errmsg := '[ERROR@]' ||SQLCODE||' - '||SQLERRM;
	DBMS_OUTPUT.PUT_LINE('[ERROR@]' ||SQLCODE||' - '||SQLERRM);
	RETURN -1;
END NHS_ACT_DOCTOR;
/
