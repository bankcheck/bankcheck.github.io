CREATE OR REPLACE FUNCTION "NHS_ACT_UPDATE_RELATED_DOCTOR" (
	v_action            IN VARCHAR2,
	v_DOCCODE           IN VARCHAR2,
	v_DOCFNAME          IN VARCHAR2,
	v_DOCGNAME          IN VARCHAR2,
	v_DOCCNAME          IN VARCHAR2,
	v_DOCIDNO           IN VARCHAR2,
	v_DOCSEX            IN VARCHAR2,
	v_SPCCODE           IN VARCHAR2,
	v_DOCSTS            IN VARCHAR2,
	v_DOCTYPE           IN VARCHAR2,
	v_DOCPCT_I          IN VARCHAR2,
	v_DOCPCT_O          IN VARCHAR2,
	v_DOCPCT_D          IN VARCHAR2,
	v_DOCADD1           IN VARCHAR2,
	v_DOCADD2           IN VARCHAR2,
	v_DOCADD3           IN VARCHAR2,
	v_DOCHTEL           IN VARCHAR2,
	v_DOCOTEL           IN VARCHAR2,
	v_DOCPTEL           IN VARCHAR2,
	v_DOCTSLOT          IN VARCHAR2,
	v_DOCQUALI          IN VARCHAR2,
	v_DOCTDATE          IN VARCHAR2,
	v_DOCSDATE          IN VARCHAR2,
	v_DOCHOMADD1        IN VARCHAR2,
	v_DOCHOMADD2        IN VARCHAR2,
	v_DOCHOMADD3        IN VARCHAR2,
	v_DOCOFFADD1        IN VARCHAR2,
	v_DOCOFFADD2        IN VARCHAR2,
	v_DOCOFFADD3        IN VARCHAR2,
	v_DOCCSHOLY         IN VARCHAR2,
	v_DOCMTEL           IN VARCHAR2,
	v_DOCEMAIL          IN VARCHAR2,
	v_DOCFAXNO          IN VARCHAR2,
	v_DOCHOMADD4        IN VARCHAR2,
	v_DOCADD4           IN VARCHAR2,
	v_DOCOFFADD4        IN VARCHAR2,
	v_DOCPICKLIST       IN VARCHAR2,
--	v_USRID             IN VARCHAR2,
	v_DOCQUALIFY        IN VARCHAR2,
	v_DOCBDATE          IN VARCHAR2,
	v_RPTTO             IN VARCHAR2,
	v_ISDOCTOR          IN VARCHAR2,
	v_TITTLE            IN VARCHAR2,
	v_ISOTSURGEON       IN VARCHAR2,
	v_ISOTANESTHETIST   IN VARCHAR2,
	v_SHOWPROFILE       IN VARCHAR2,
	v_STODECLARATION    IN VARCHAR2,
	v_BRNO              IN VARCHAR2,
	v_REMARKS           IN VARCHAR2,
	v_cpsdate           IN VARCHAR2,
	v_apldate           IN VARCHAR2,
	v_mpscdate          IN VARCHAR2,
	v_sldate            IN VARCHAR2,
	v_ISENDOSCOPIST     IN VARCHAR2,
	v_TEXT1             IN VARCHAR2,
	v_TEXT2             IN VARCHAR2,
	v_TEXT3             IN VARCHAR2,
	v_TEXT4             IN VARCHAR2,
	v_TEXT5             IN VARCHAR2,
	v_TEXT6             IN VARCHAR2,
	v_TEXT7             IN VARCHAR2,
	v_TEXT8             IN VARCHAR2,
	v_TEXT9             IN VARCHAR2,
	v_TEXT10            IN VARCHAR2,
	v_CTEXT1            IN VARCHAR2,
	v_CTEXT2            IN VARCHAR2,
	v_CTEXT3            IN VARCHAR2,
	v_CTEXT4            IN VARCHAR2,
	v_CTEXT5            IN VARCHAR2,
	v_CTEXT6            IN VARCHAR2,
	v_CTEXT7            IN VARCHAR2,
	v_CTEXT8            IN VARCHAR2,
	v_CTEXT9            IN VARCHAR2,
	v_CTEXT10           IN VARCHAR2,
	v_ISPOSTSCHEDULE    IN VARCHAR2,
	v_RECEIVEPROMO      IN VARCHAR2,
	v_RECEIVEPROMOBYFAX IN VARCHAR2,
	v_HKMCLICNO         IN VARCHAR2,
	v_CLINSDATE         IN VARCHAR2,
	v_OPPSDATE          IN VARCHAR2,
	v_OPPEDATE          IN VARCHAR2,
	v_DOCINSURCOMP      IN VARCHAR2,
	v_COMPANY           IN VARCHAR2,
	v_MSTRDOCCODE       IN VARCHAR2,
	v_EHRUID   		    IN VARCHAR2,
	v_SITECODE          IN VARCHAR2,
	v_USRID             IN VARCHAR2,
	o_errmsg		    OUT VARCHAR2
)
	RETURN NUMBER
AS
	o_ERRCODE NUMBER;
	o_NOOFREC NUMBER;
	o_NOOFCERTREC NUMBER;
	v_DCODE DOCTOR.DOCCODE%TYPE;
	v_DOCUPTRELDOC_NO NUMBER;
	v_NOOFREC NUMBER;
--	o_doccode number;
	RUN_OUTCUR TYPES.CURSOR_TYPE;
BEGIN
	o_errcode := 0;
	o_errmsg := 'OK';
--	o_doccode := TO_NUMBER(v_DOCCODE);
	SELECT COUNT(1) INTO o_NOOFREC FROM DOCTOR WHERE DOCCODE = v_DOCCODE;

	IF o_NOOFREC > 0 THEN
		IF v_MSTRDOCCODE IS NULL THEN
			-- HAVE MASTER DOCTOR CODE
			OPEN RUN_OUTCUR FOR
				SELECT DOCCODE FROM DOCTOR
				WHERE MSTRDOCCODE = v_DOCCODE
				ORDER BY DOCCODE;
		ELSE
/*
			-- IS RELATED DOCTOR CODE
			OPEN RUN_OUTCUR FOR
				SELECT MSTRDOCCODE FROM DOCTOR WHERE DOCCODE = v_DOCCODE
					UNION
				SELECT DOCCODE FROM DOCTOR WHERE MSTRDOCCODE IN (
				SELECT MSTRDOCCODE FROM DOCTOR WHERE DOCCODE = v_DOCCODE)
				AND DOCCODE != v_DOCCODE
				ORDER BY 1;
*/
			-- ONLY UPDATE DOCCODE WITH MASTER DOC CODE
			OPEN RUN_OUTCUR FOR
				SELECT MSTRDOCCODE FROM DOCTOR WHERE 1!=1
				ORDER BY 1;
		END IF;

--		OPEN RUN_OUTCUR;
		LOOP
			FETCH RUN_OUTCUR INTO v_DCODE;
			EXIT WHEN RUN_OUTCUR%NOTFOUND;
			-- GET LOG SEQ NO
			v_DOCUPTRELDOC_NO := SEQ_DOCUPTRELDOC_LOG.NEXTVAL;

			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCTOR_UPDATE_LOG (
					SEQ_NO,
					DOCCODE,
					DOCFNAME,
					DOCGNAME,
					DOCCNAME,
					DOCIDNO,
					DOCSEX,
					SPCCODE,
					DOCSTS,
					DOCTYPE,
					DOCPCT_I,
					DOCPCT_O,
					DOCPCT_D,
					DOCADD1,
					DOCADD2,
					DOCADD3,
					DOCHTEL,
					DOCOTEL,
					DOCPTEL,
					DOCTSLOT,
					DOCQUALI,
					DOCTDATE,
					DOCSDATE,
					DOCHOMADD1,
					DOCHOMADD2,
					DOCHOMADD3,
					DOCOFFADD1,
					DOCOFFADD2,
					DOCOFFADD3,
					DOCCSHOLY,
					DOCMTEL,
					DOCEMAIL,
					DOCFAXNO,
					DOCHOMADD4,
					DOCADD4,
					DOCOFFADD4,
					DOCPICKLIST,
					USRID,
					DOCQUALIFY,
					DOCBDATE,
					RPTTO,
					ISDOCTOR,
					TITTLE,
					ISOTSURGEON,
					ISOTANESTHETIST,
					SHOWPROFILE,
					DAYINSTRUCTION,
					INPINSTRUCTION,
					OUPINSTRUCTION,
					PAYINSTRUCTION,
					BRNO,
					DOCREMARK,
					CPSDATE,
					APLDATE,
					MPSCDATE,
					SLDATE,
					ISOTENDOSCOPIST,
					CHKPRCPRIV,
					DOCINSURCOMP,
					OPPEDATE,
					RECEIVEPROMO,
					RECEIVEPROMOBYFAX,
					OPPSDATE,
					CLINSDATE,
					HKMCLICNO,
					ISPOSTSCHEDULE,
					CREATED_DATE,
					CREATED_USER,
					EHRUID
			)
			SELECT
				v_DOCUPTRELDOC_NO,
				DOCCODE,
				DOCFNAME,
				DOCGNAME,
				DOCCNAME,
				DOCIDNO,
				DOCSEX,
				SPCCODE,
				DOCSTS,
				DOCTYPE,
				DOCPCT_I,
				DOCPCT_O,
				DOCPCT_D,
				DOCADD1,
				DOCADD2,
				DOCADD3,
				DOCHTEL,
				DOCOTEL,
				DOCPTEL,
				DOCTSLOT,
				DOCQUALI,
				DOCTDATE,
				DOCSDATE,
				DOCHOMADD1,
				DOCHOMADD2,
				DOCHOMADD3,
				DOCOFFADD1,
				DOCOFFADD2,
				DOCOFFADD3,
				DOCCSHOLY,
				DOCMTEL,
				DOCEMAIL,
				DOCFAXNO,
				DOCHOMADD4,
				DOCADD4,
				DOCOFFADD4,
				DOCPICKLIST,
				USRID,
				DOCQUALIFY,
				DOCBDATE,
				RPTTO,
				ISDOCTOR,
				TITTLE,
				ISOTSURGEON,
				ISOTANESTHETIST,
				SHOWPROFILE,
				DAYINSTRUCTION,
				INPINSTRUCTION,
				OUPINSTRUCTION,
				PAYINSTRUCTION,
				BRNO,
				DOCREMARK,
				CPSDATE,
				APLDATE,
				MPSCDATE,
				SLDATE,
				ISOTENDOSCOPIST,
				CHKPRCPRIV,
				DOCINSURCOMP,
				OPPEDATE,
				RECEIVEPROMO,
				RECEIVEPROMOBYFAX,
				OPPSDATE,
				CLINSDATE,
				HKMCLICNO,
				ISPOSTSCHEDULE,
				SYSDATE,
				v_USRID,
				EHRUID
			FROM DOCTOR
			WHERE DOCCODE = v_DCODE;
/*
1.  Home Address
2.  Email
3.  Pager
4.  Mobile Phone
5.  Home Phone
6.  Privilege
7.  Qualification
8.  Cert (Eng). Cert (Chi)
9.  Approval
10. Ref Date Annual Practicing License Date

Malpractice Insurance Expiry
Admission Expiry Date
Insurance Company
 */
			UPDATE DOCTOR SET
--				DOCCODE = v_DOCCODE,
--				DOCFNAME = v_DOCFNAME,
--				DOCGNAME = v_DOCGNAME,
--				DOCCNAME = v_DOCCNAME,
--				DOCIDNO = v_DOCIDNO,
--				DOCSEX = v_DOCSEX,
--				SPCCODE = v_SPCCODE,
--				DOCSTS = v_DOCSTS,
--				DOCTYPE = v_DOCTYPE,
--				DOCPCT_I = TO_NUMBER(v_DOCPCT_I),
--				DOCPCT_O = TO_NUMBER(v_DOCPCT_O),
--				DOCPCT_D = TO_NUMBER(v_DOCPCT_D),
--				DOCADD1 = v_DOCADD1,
--				DOCADD2 = v_DOCADD2,
--				DOCADD3 = v_DOCADD3,
--				DOCHTEL = v_DOCHTEL,
--				DOCOTEL = v_DOCOTEL,
				DOCPTEL = v_DOCPTEL,
--				DOCTSLOT = TO_NUMBER(v_DOCTSLOT),
--				DOCQUALI = v_DOCQUALI,
				DOCTDATE = TO_DATE(v_DOCTDATE,'DD/MM/YYYY'), -- Admission Expiry Date
--				DOCSDATE = TO_DATE(v_DOCSDATE,'DD/MM/YYYY'),
--				DOCHOMADD1 = v_DOCHOMADD1,
--				DOCHOMADD2 = v_DOCHOMADD2,
--				DOCHOMADD3 = v_DOCHOMADD3,
--				DOCOFFADD1 = v_DOCOFFADD1,
--				DOCOFFADD2 = v_DOCOFFADD2,
--				DOCOFFADD3 = v_DOCOFFADD3,
--				DOCCSHOLY = TO_NUMBER(v_DOCCSHOLY),-----
				DOCMTEL = V_DOCMTEL,
--				DOCEMAIL = v_DOCEMAIL,
--				DOCFAXNO = v_DOCFAXNO,
--				DOCHOMADD4 = v_DOCHOMADD4,
--				DOCADD4 = v_DOCADD4,
--				DOCOFFADD4 = v_DOCOFFADD4,
--				DOCPICKLIST=TO_NUMBER(v_DOCPICKLIST),-----
--				USRID = v_USRID,
--				DOCQUALIFY=TO_NUMBER(v_DOCQUALIFY),-----
--				DOCBDATE=TO_DATE(v_DOCBDATE, 'DD/MM/YYYY'),
				RPTTO = v_RPTTO,
--				ISDOCTOR = TO_NUMBER(v_ISDOCTOR),
--				TITTLE = v_TITTLE,
--				ISOTSURGEON = TO_NUMBER(v_ISOTSURGEON),--
--				ISOTANESTHETIST = TO_NUMBER(v_ISOTANESTHETIST),--
--				SHOWPROFILE = TO_NUMBER(v_SHOWPROFILE),--
--				BRNO = v_brno,
--				DOCREMARK = v_remarks,
--				CPSDATE = TO_DATE(v_cpsdate, 'DD/MM/YYYY'),
--				APLDATE = TO_DATE(v_apldate, 'DD/MM/YYYY'), --  Annual Practicing License Date
--				MPSCDATE = TO_DATE(v_mpscdate, 'DD/MM/YYYY'), -- Malpractice Insurance Expiry
--				SLDATE = TO_DATE(v_SLDATE, 'DD/MM/YYYY'),
--				ISOTENDOSCOPIST = v_ISENDOSCOPIST,
--				ISPOSTSCHEDULE = v_ISPOSTSCHEDULE,
--				RECEIVEPROMO = v_RECEIVEPROMO,
--				RECEIVEPROMOBYFAX = v_RECEIVEPROMOBYFAX,
--				HKMCLICNO = v_HKMCLICNO,
--				CLINSDATE = TO_DATE(v_CLINSDATE, 'DD/MM/YYYY'),
--				OPPSDATE = TO_DATE(v_OPPSDATE, 'DD/MM/YYYY'),
--				OPPEDATE = TO_DATE(v_OPPEDATE, 'DD/MM/YYYY'),
--				DOCINSURCOMP = v_DOCINSURCOMP, -- Insurance Company
				EHRUID = v_EHRUID
			WHERE DOCCODE = v_DCODE;

			-- DOCTOR PRIVILEGE
			v_NOOFREC := 0; -- CLEAR COUNTER

			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCPRILINK_LOG (
			SEQ_NO,DPLID,DOCCODE,PRICODE,DPLSDATE,DPLTDATE,CREATED_DATE,CREATED_USER)
			SELECT
				v_DOCUPTRELDOC_NO,DPLID,DOCCODE,PRICODE,DPLSDATE,DPLTDATE,SYSDATE,v_USRID
			FROM
			DOCPRILINK
			WHERE DOCCODE = v_DCODE;

			-- CHECK DELETE ITEM
			FOR DELITEM IN (SELECT PRICODE FROM DOCPRILINK WHERE DOCCODE = v_DCODE
					MINUS
					SELECT PRICODE FROM DOCPRILINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				DELETE FROM DOCPRILINK WHERE PRICODE = DELITEM.PRICODE AND DOCCODE = v_DCODE;
			END LOOP;

			-- ADD OR MODIFY ITME
			FOR MODITEM IN (SELECT DPLID,DOCCODE,PRICODE,DPLSDATE,DPLTDATE
					FROM DOCPRILINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				SELECT COUNT(1)
				INTO v_NOOFREC
				FROM DOCPRILINK
				WHERE PRICODE = MODITEM.PRICODE
				AND DOCCODE = v_DCODE;

				IF v_NOOFREC = 0 THEN
					INSERT INTO DOCPRILINK (
						DPLID,
						DOCCODE,
						PRICODE,
						DPLSDATE,
						DPLTDATE
					) VALUES (
						SEQ_DOCPRILINK.NEXTVAL,
						v_DCODE,
						MODITEM.PRICODE,
						TO_DATE(MODITEM.DPLSDATE, 'DD/MM/YYYY'),
						TO_DATE(MODITEM.DPLTDATE, 'DD/MM/YYYY')
					);
				ELSE
					UPDATE DOCPRILINK
					SET
						DPLSDATE =  MODITEM.DPLSDATE,
						DPLTDATE = MODITEM.DPLTDATE
					WHERE DOCCODE = v_DCODE
					AND   PRICODE = MODITEM.PRICODE
					AND  (DPLSDATE != MODITEM.DPLSDATE
					OR    DPLTDATE != MODITEM.DPLTDATE);
				END IF;
			END LOOP;

			-- DOCTOR QUALIFICATION
			v_NOOFREC := 0; -- CLEAR COUNTER

			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCQLFLINK_LOG (
			SEQ_NO,DQLID,DOCCODE,QLFID,DQLIDATE,CREATED_DATE,CREATED_USER)
			SELECT
				v_DOCUPTRELDOC_NO,DQLID,DOCCODE,QLFID,DQLIDATE,SYSDATE,v_USRID
			FROM
				DOCQLFLINK
			WHERE DOCCODE = v_DCODE;

			-- CHECK DELETE ITEM
			FOR DELITEM IN (SELECT QLFID FROM DOCQLFLINK WHERE DOCCODE = v_DCODE
					MINUS
					SELECT QLFID FROM DOCQLFLINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				DELETE FROM DOCQLFLINK WHERE QLFID = DELITEM.QLFID AND DOCCODE = v_DCODE;
			END LOOP;

			-- ADD OR MODIFY ITME
			FOR MODITEM IN (SELECT DQLID,DOCCODE,QLFID,DQLIDATE
					FROM DOCQLFLINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				SELECT COUNT(1)
				INTO v_NOOFREC
				FROM DOCQLFLINK
				WHERE DQLID = MODITEM.DQLID
				AND DOCCODE = v_DCODE;

				IF v_NOOFREC = 0 THEN
					INSERT INTO DOCQLFLINK (
						DQLID,
						DOCCODE,
						QLFID,
						DQLIDATE
					) VALUES (
						SEQ_DOCQLFLINK.NEXTVAL,
						v_DOCCODE,
						MODITEM.QLFID,
						MODITEM.DQLIDATE
					);
				ELSE
					UPDATE DOCQLFLINK
					SET
						DQLIDATE = MODITEM.DQLIDATE
					WHERE DOCCODE = v_DCODE
					AND   QLFID = MODITEM.QLFID
					AND   DQLIDATE != MODITEM.DQLIDATE;
				END IF;
			END LOOP;

			-- CERT(ENG) & CERT(CHI)
			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCCERT_LOG
				SELECT
					v_DOCUPTRELDOC_NO,
					DOCCODE,
					ECERT1,
					ECERT2,
					ECERT3,
					ECERT4,
					ECERT5,
					ECERT6,
					ECERT7,
					ECERT8,
					ECERT9,
					ECERT10,
					CCERT1,
					CCERT2,
					CCERT3,
					CCERT4,
					CCERT5,
					CCERT6,
					CCERT7,
					CCERT8,
					CCERT9,
					CCERT10,
					SYSDATE,
					v_USRID
				FROM DOCCERT
				WHERE DOCCODE= v_DCODE;

			select COUNT(1) into o_NOOFCERTREC from DOCCERT where DOCCODE = v_DCODE;
			IF o_NOOFCERTREC = 0 THEN
				insert into DOCCERT(
						DOCCODE,ECERT1,ECERT2,ECERT3,ECERT4,ECERT5,ECERT6,ECERT7,ECERT8,ECERT9,ECERT10,
						CCERT1,CCERT2,CCERT3,CCERT4,CCERT5,CCERT6,CCERT7,CCERT8,CCERT9,CCERT10
				) VALUES(
						v_DCODE,v_TEXT1,v_TEXT2,v_TEXT3,v_TEXT4,v_TEXT5,v_TEXT6,v_TEXT7,v_TEXT8,v_TEXT8,v_TEXT10,
						v_ctext1,v_ctext2,v_ctext3,v_ctext4,v_ctext5,v_ctext6,v_ctext7,v_ctext8,v_ctext9,v_ctext10);
			ELSE
				UPDATE doccert
				SET
					ecert1 = v_text1,
					ECERT2 = v_TEXT2,
					ecert3 = v_text3,
					ecert4 = v_text4,
					ecert5 = v_text5,
					ecert6 = v_text6,
					ecert7 = v_text7,
					ecert8 = v_text8,
					ecert9 = v_text9,
					ecert10 = v_text10,
					ccert1 = v_ctext1,
					ccert2 = v_ctext2,
					ccert3 = v_ctext3,
					ccert4 = v_ctext4,
					ccert5 = v_ctext5,
					ccert6 = v_ctext6,
					ccert7 = v_ctext7,
					ccert8 = v_ctext8,
					ccert9 = v_ctext9,
					CCERT10 = v_CTEXT10
				where DOCCODE = v_DCODE;
			END IF;

			-- DOCTOR APPROVAL
			v_NOOFREC := 0;

			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCAPVLINK_LOG
			(SEQ_NO,DALID,DOCCODE,CMTNAME,ACTNO,APVDATE,CREATED_DATE,CREATED_USER)
			SELECT
				v_DOCUPTRELDOC_NO,DALID,v_DOCCODE,CMTNAME,ACTNO,APVDATE,SYSDATE,v_USRID
			FROM DOCAPVLINK
			WHERE DOCCODE = v_DCODE;

			-- CHECK DELETE ITEM
			FOR DELITEM IN (SELECT CMTNAME FROM DOCAPVLINK WHERE DOCCODE = v_DCODE
					MINUS
				SELECT CMTNAME FROM DOCAPVLINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				DELETE FROM DOCAPVLINK WHERE CMTNAME = DELITEM.CMTNAME AND DOCCODE = v_DCODE;
			END LOOP;

			-- ADD OR MODIFY ITME
			FOR MODITEM IN (SELECT DALID,DOCCODE,CMTNAME,ACTNO,APVDATE
					FROM DOCAPVLINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				SELECT COUNT(1)
				INTO v_NOOFREC
				FROM DOCAPVLINK
				WHERE CMTNAME = MODITEM.CMTNAME
				AND DOCCODE = v_DCODE;

				IF v_NOOFREC = 0 THEN
					INSERT INTO DOCAPVLINK (
						DALID,DOCCODE,CMTNAME,ACTNO,APVDATE
					) VALUES (
						SEQ_DOCAPVLINK.NEXTVAL,
						v_DOCCODE,
						MODITEM.CMTNAME,
						MODITEM.ACTNO,
						MODITEM.APVDATE
					);
				ELSE
					UPDATE DOCAPVLINK
					SET
						ACTNO = MODITEM.ACTNO,
						APVDATE = MODITEM.APVDATE
					WHERE DOCCODE = v_DCODE
					AND   DOCCODE = MODITEM.CMTNAME
					AND  (ACTNO != MODITEM.ACTNO
					OR    APVDATE != MODITEM.APVDATE);
				END IF;
			END LOOP;
/*
			-- DOCTOR DEPT
			v_NOOFREC := 0;

			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCDPTLINK_LOG (
				SEQ_NO,DDLID,DOCCODE,DPTCODE,CREATED_DATE,CREATED_USER)
			SELECT
				v_DOCUPTRELDOC_NO,DDLID,DOCCODE,DPTCODE,SYSDATE,v_USRID
			FROM
				DOCDPTLINK
			WHERE DOCCODE = v_DCODE;

			-- CHECK DELETE ITEM
			FOR DELITEM IN (SELECT DPTCODE FROM DOCDPTLINK WHERE DOCCODE = v_DCODE
					MINUS
				SELECT DPTCODE FROM DOCDPTLINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				DELETE FROM DOCDPTLINK WHERE DPTCODE = DELITEM.DPTCODE AND DOCCODE = v_DCODE;
			END LOOP;

			-- ADD OR MODIFY ITME
			FOR MODITEM IN (SELECT DDLID,DOCCODE,DPTCODE
					FROM DOCDPTLINK WHERE DOCCODE = v_DOCCODE)
			LOOP
				SELECT COUNT(1)
				INTO v_NOOFREC
				FROM DOCDPTLINK
				WHERE DDLID = MODITEM.DDLID
				AND DOCCODE = v_DCODE;

				IF v_NOOFREC = 0 THEN
					INSERT INTO DOCDPTLINK (
						DDLID,
						DOCCODE,
						DPTCODE
					) VALUES (
						SEQ_DOCDPTLINK.NEXTVAL,
						v_DCODE,
						MODITEM.DPTCODE
					);
				END IF;
			END LOOP;

			-- DOCTOR BASICSALARY
			v_NOOFREC := 0;

			-- COPY PREIVOUS RECORD TO LOG
			INSERT INTO DOCBASSAL_LOG (
				SEQ_NO,DBSID,DOCCODE,DBSSDATE,DBSEDATE,DBSAMT,CREATED_DATE,CREATED_USER)
			SELECT
				v_DOCUPTRELDOC_NO,DBSID,DOCCODE,DBSSDATE,DBSEDATE,DBSAMT,SYSDATE,v_USRID
			FROM
				DOCBASSAL
			WHERE DOCCODE = v_DCODE;

			-- CHECK DELETE ITEM
			FOR DELITEM IN (SELECT DOCCODE FROM DOCBASSAL WHERE DOCCODE = v_DCODE
					MINUS
				SELECT DOCCODE FROM DOCBASSAL WHERE DOCCODE = v_DOCCODE)
			LOOP
				DELETE FROM DOCBASSAL WHERE DOCCODE = DELITEM.DOCCODE;
			END LOOP;

			-- ADD OR MODIFY ITME
			FOR MODITEM IN (SELECT DBSID,DOCCODE,DBSSDATE,DBSEDATE,DBSAMT
						FROM DOCBASSAL WHERE DOCCODE = v_DOCCODE)
			LOOP
				SELECT COUNT(1)
				INTO v_NOOFREC
				FROM DOCBASSAL
				WHERE DOCCODE = MODITEM.DOCCODE;

				IF v_NOOFREC = 0 THEN
					INSERT INTO DOCBASSAL (
						DBSID,
						DOCCODE,
						DBSAMT,
						DBSSDATE,
						DBSEDATE
					) VALUES (
						SEQ_DOCBASSAL.NEXTVAL,
						v_DOCCODE,
						MODITEM.DBSAMT,
						MODITEM.DBSSDATE,
						MODITEM.DBSEDATE
					);
				ELSE
					UPDATE DOCBASSAL
					SET
						DBSAMT = MODITEM.DBSAMT,
						DBSSDATE = MODITEM.DBSSDATE,
						DBSEDATE = MODITEM.DBSEDATE
					WHERE DOCCODE = v_DCODE;
				END IF;
			END LOOP;
*/
		END LOOP;
		CLOSE RUN_OUTCUR;
	ELSE
		o_errcode := -1;
		o_errmsg := 'Fail to update due to record not exist.';
	END IF;
	RETURN o_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	o_errmsg := 'Fail to update.<br><font color=red>Error Code:' || SQLCODE || '</font>';
	RETURN -1;
END NHS_ACT_UPDATE_RELATED_DOCTOR;
/