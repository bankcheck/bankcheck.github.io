CREATE OR REPLACE FUNCTION "NHS_ACT_OTLOGMETH" (
	v_ACTION IN VARCHAR2,
	v_OLMID  IN VARCHAR2,
	v_OTCID	 IN VARCHAR2,
	v_OTLID  IN VARCHAR2,
	o_ERRMSG OUT VARCHAR2
)
	RETURN NUMBER
AS
	o_ERRCODE NUMBER;
	v_NEWID NUMBER;
	v_NOOFREC NUMBER;
BEGIN
	o_ERRCODE := 0;
	o_ERRMSG  := 'OK';

	IF v_ACTION = 'DEL' THEN
		DELETE FROM OT_LOG_METH WHERE OLMID = v_OLMID;
	ELSIF v_ACTION = 'DEL_OTLID' THEN
		DELETE FROM OT_LOG_METH WHERE OTLID = v_OTLID;
	ELSE
		SELECT COUNT(1) INTO v_NOOFREC FROM OT_LOG_METH WHERE OLMID = v_OLMID;

		-- INSERT/UPDATE
		IF v_NOOFREC = 0 THEN
			SELECT SEQ_OT_LOG_METH.NEXTVAL INTO v_NEWID FROM DUAL;
			INSERT INTO OT_LOG_METH (
				OLMID,
				OTLID,
				OTCID
			) VALUES (
				v_NEWID,
				TO_NUMBER(v_OTLID),
				TO_NUMBER(v_OTCID)
			);
		ELSIF v_NOOFREC > 0 THEN
			UPDATE OT_LOG_METH
			SET OTCID = TO_NUMBER(v_OTCID)
		 	WHERE OLMID = TO_NUMBER(v_OLMID)
			AND OTLID = TO_NUMBER(v_OTLID);
		ELSE
			o_ERRCODE := -21;
			o_ERRMSG  := 'Fail to update due to record not exist.';
		END IF;
	END IF;

	RETURN o_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	o_ERRCODE := -20;
	o_errmsg := SQLERRM;
	RETURN o_ERRCODE;
END NHS_ACT_OTLOGMETH;
/
