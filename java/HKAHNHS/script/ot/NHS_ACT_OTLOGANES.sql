CREATE OR REPLACE FUNCTION "NHS_ACT_OTLOGANES" (
	v_ACTION  IN VARCHAR2,
	v_OLAID   IN VARCHAR2,
	v_DOCCODE IN VARCHAR2,
	v_OTLID   IN VARCHAR2,
	o_ERRMSG  OUT VARCHAR2
)
	RETURN NUMBER
AS
  	o_ERRCODE NUMBER;
  	v_NEWID NUMBER;
  	v_NOOFREC NUMBER;
BEGIN
  	o_ERRCODE := 0;
  	o_ERRMSG  := 'OK';

	IF v_ACTION = 'DEL' THEN
		DELETE FROM OT_LOG_ANES WHERE OLAID = v_OLAID;
	ELSIF v_ACTION = 'DEL_OTLID' THEN
		DELETE FROM OT_LOG_ANES WHERE OTLID = v_OTLID;
	ELSE
  	  	SELECT COUNT(1) INTO v_NOOFREC FROM OT_LOG_ANES WHERE OLAID = v_OLAID;

  	  	-- INSERT/UPDATE
	  	IF v_NOOFREC = 0 THEN
	     		SELECT SEQ_OT_LOG_ANES.NEXTVAL INTO v_NEWID FROM DUAL;
	     		INSERT INTO OT_LOG_ANES (
	     			OLAID,
				OTLID,
				DOCCODE
	     		) VALUES (
	     			v_NEWID,
	        		TO_NUMBER(v_OTLID),
	        		v_DOCCODE
	        	);
	  	ELSIF v_NOOFREC > 0 THEN
	    		UPDATE OT_LOG_ANES
	       		SET DOCCODE = v_DOCCODE
	     		WHERE OLAID = TO_NUMBER(v_OLAID)
	       		AND OTLID = TO_NUMBER(v_OTLID);
	  	ELSE
	    		o_ERRCODE := -41;
	    		o_ERRMSG  := 'Fail to update due to record not exist.';
	  	END IF;
  	END IF;
  	RETURN o_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	o_ERRCODE := -40;
	o_errmsg := SQLERRM;
	RETURN o_ERRCODE;
END NHS_ACT_OTLOGANES;
/
