CREATE OR REPLACE FUNCTION "NHS_ACT_OTLOGPROC" (
	v_ACTION  IN VARCHAR2,
	v_OLPID   IN VARCHAR2,
	v_OTPCODE IN VARCHAR2,
	v_OTLID   IN VARCHAR2,
	o_ERRMSG  OUT VARCHAR2
)
	RETURN NUMBER
AS
	o_ERRCODE NUMBER;
	v_NEWID NUMBER;
	v_NOOFREC NUMBER;
	v_NOOFREC2 NUMBER;	
	v_OTPID VARCHAR2(22);
BEGIN
	o_ERRCODE := 0;
	o_ERRMSG  := 'OK';

	IF v_ACTION = 'DEL' THEN
		DELETE FROM OT_LOG_PROC WHERE OLPID = v_OLPID;
	ELSIF v_ACTION = 'DEL_OTLID' THEN
		DELETE FROM OT_LOG_PROC WHERE OTLID = v_OTLID;
	ELSE
		SELECT COUNT(1) INTO v_NOOFREC FROM OT_LOG_PROC WHERE OLPID = v_OLPID;
		
		SELECT COUNT(1) INTO v_NOOFREC2 FROM OT_PROC WHERE OTPCODE = v_OTPCODE AND OTPSTS = -1;
		IF v_NOOFREC2 > 0 THEN
			SELECT OTPID INTO v_OTPID FROM OT_PROC WHERE OTPCODE = v_OTPCODE AND OTPSTS = -1;
		END IF;

		-- INSERT/UPDATE
		IF v_NOOFREC2 > 0 THEN
			IF v_NOOFREC = 0 THEN
				SELECT SEQ_OT_LOG_PROC.NEXTVAL INTO v_NEWID FROM DUAL;
				INSERT INTO OT_LOG_PROC (
					OLPID,
					OTLID,
					OTPID
				) VALUES (
					v_NEWID,
					TO_NUMBER(v_OTLID),
					TO_NUMBER(v_OTPID)
				);
			ELSIF v_NOOFREC > 0 THEN
				UPDATE OT_LOG_PROC
				SET OTPID = v_OTPID
				WHERE OLPID = TO_NUMBER(v_OLPID)
				AND OTLID = TO_NUMBER(v_OTLID);
			ELSE
				o_ERRCODE := -10;
				o_ERRMSG  := 'Fail to update due to record not exist.';
			END IF;
		END IF;
	END IF;

	RETURN o_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
	o_ERRCODE := -10;
	o_errmsg := SQLERRM;
	RETURN o_ERRCODE;
END NHS_ACT_OTLOGPROC;
/
