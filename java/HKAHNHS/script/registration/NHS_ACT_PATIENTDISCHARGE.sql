CREATE OR REPLACE FUNCTION "NHS_ACT_PATIENTDISCHARGE" (
	v_ACTION       IN VARCHAR2,
	v_INPID        IN VARCHAR2,
	v_DOCCODE      IN VARCHAR2,
	v_DISCHGDATE   IN VARCHAR2,
	v_SDSCODE      IN VARCHAR2,
	v_SRSNCODE     IN VARCHAR2,
	v_DESCODE      IN VARCHAR2,
	v_STLBRNCOUT   IN VARCHAR2,
	v_NEWDISCHG    IN VARCHAR2,--1--true,0--false
	v_UPDALL       IN VARCHAR2,--1--true,0--false
	v_REGID        IN VARCHAR2,
	v_COMPUTERNAME IN VARCHAR2,
	v_USRID        IN VARCHAR2,
	O_ERRMSG       OUT VARCHAR2
)
	RETURN NUMBER
AS
	O_ERRCODE NUMBER;
	v_ERRCODE NUMBER;
	v_ERRMSG VARCHAR2(100);
	v_NoOfRec NUMBER;
	v_MRegDate DATE;
	v_LASTDISCHARGEDATE DATE;
	v_PATNO VARCHAR2(20);
	v_BEDSTS BED.BEDSTS%TYPE;
	v_BEDCODE BED.BEDCODE%TYPE;
	v_DEATH PATIENT.DEATH%TYPE;
	v_RegDate DATE;
	v_INPDDATE DATE;

	MSG_DOCTOR_INACTION VARCHAR2(42) := 'The current doctor is inactive or invalid.';
	MSG_WRONG_SDSCODE VARCHAR2(21) := 'Invalid Disease Code.';
	MSG_WRONG_SRSNCODE VARCHAR2(20) := 'Invalid Reason Code.';
	MSG_DISCHARGE_DATE VARCHAR2(51) := 'Discharge date should be small than admission date.';
	MSG_INVALID_DATE VARCHAR2(19) := 'Invalid Date Value.';
	MSG_NO_DIST_DESTINATION VARCHAR2(35) := 'Please enter Discharge Destination.';
	DOCTOR_STATUS_ACTIVE NUMBER := -1;
	BED_STS_OCCUPY VARCHAR2(1) := 'O';
BEGIN
	O_ERRCODE := 0;
	O_ERRMSG := 'OK';

	SELECT COUNT(1) INTO v_NoOfRec FROM REG WHERE INPID = TO_NUMBER(v_INPID);
	IF v_NoOfRec = 1 THEN
		SELECT PATNO, RegDate INTO v_PATNO, v_RegDate FROM REG
		WHERE REGID = TO_NUMBER(v_REGID);
	ELSE
		O_ERRCODE := -1;
		O_ERRMSG := 'Invalid registration.';
		RETURN O_ERRCODE;
	END IF;

	-- check doccode
	SELECT COUNT(1) INTO v_NoOfRec FROM DOCTOR
	WHERE  DOCCODE = v_DOCCODE
	AND    DOCSTS = DOCTOR_STATUS_ACTIVE;

	IF v_NoOfRec = 0 THEN
		O_ERRCODE := -100;
		IF v_NEWDISCHG = '1' THEN
			O_ERRMSG := MSG_DOCTOR_INACTION;
		ELSE
			O_ERRMSG := 'Invalid Doctor.';
		END IF;
		RETURN O_ERRCODE;
	END IF;

	-- check disease code
	IF v_SDSCODE IS NOT NULL AND LENGTH(v_SDSCODE) > 0 THEN
		SELECT COUNT(1) INTO v_NoOfRec FROM SDISEASE
		WHERE  SDSCODE = v_SDSCODE
		AND    SDSNEW = '-1';

		IF v_NoOfRec = 0 THEN
			O_ERRCODE := -200;
			O_ERRMSG := MSG_WRONG_SDSCODE;
			RETURN O_ERRCODE;
		END IF;
	END IF;

	-- check reason
	IF v_SRSNCODE IS NOT NULL THEN
		SELECT COUNT(1) INTO v_NoOfRec FROM SREASON
		WHERE  SRSNCODE = v_SRSNCODE
		AND    SRSNNEW = '-1';

		IF v_NoOfRec <= 0 THEN
			O_ERRCODE := -300;
			O_ERRMSG := MSG_WRONG_SRSNCODE;
			RETURN O_ERRCODE;
		END IF;
	END IF;

	-- check discharge date
	IF v_DISCHGDATE IS NOT NULL THEN
		BEGIN
			v_INPDDATE := TO_DATE(v_DISCHGDATE, 'dd/mm/yyyy HH24:MI:SS');
		EXCEPTION WHEN OTHERS THEN
			O_ERRCODE := -400;
			O_ERRMSG := MSG_INVALID_DATE;
			RETURN O_ERRCODE;
		END;

		IF v_INPDDATE < v_RegDate THEN
			O_ERRCODE := -400;
			O_ERRMSG := MSG_DISCHARGE_DATE;
			RETURN O_ERRCODE;
		END IF;

		IF UPPER(v_DESCODE) = 'DEATH' AND v_INPDDATE > SYSDATE THEN
			O_ERRCODE := -400;
			O_ERRMSG := 'Discharge date cannot be later than current date.';
			RETURN O_ERRCODE;
		END IF;
	ELSE
		v_INPDDATE := NULL;
	END IF;

	-- destination
	IF v_DISCHGDATE IS NOT NULL AND v_DESCODE IS NULL THEN
		O_ERRCODE := -1;
		O_ERRMSG := MSG_NO_DIST_DESTINATION;
	END IF;

	-- check status
	IF v_DISCHGDATE IS NULL THEN
		SELECT BEDCODE INTO v_BEDCODE FROM INPAT
		WHERE  INPID = v_INPID;

		SELECT COUNT(1) INTO v_NoOfRec FROM RLOCK
		WHERE  UPPER(RLKTYPE) = 'BED'
		AND    RLKKEY = v_BEDCODE;

		SELECT BEDSTS INTO v_BEDSTS FROM BED
		WHERE  BEDCODE = v_BEDCODE;

		IF v_NoOfRec > 0 THEN
			v_BEDSTS := BED_STS_OCCUPY;
		END IF;

		IF v_BEDSTS = BED_STS_OCCUPY THEN
			O_ERRCODE := -1;
			O_ERRMSG := 'The Bed is being occupied by other patient, cannot undo discharge. [' || v_BEDCODE || ']';
			RETURN O_ERRCODE;
		END IF;
	END IF;

	IF v_DISCHGDATE IS NULL THEN
		SELECT BEDCODE INTO v_BEDCODE
		FROM INPAT
		WHERE INPID = v_INPID;

		v_ERRCODE := NHS_ACT_RECORDLOCK(v_ACTION, 'Bed', v_BEDCODE, v_COMPUTERNAME, v_USRID, v_ERRMSG);
	END IF;

	-- HAS NEW PAT
	IF v_DISCHGDATE IS NULL THEN
		SELECT COUNT(1) INTO v_NoOfRec
		FROM   PATIENT P, REG R, INPAT I
		WHERE  P.PATNO = v_PATNO
		AND    R.REGTYPE = 'I'
		AND    R.REGSTS = 'N'
		AND    I.INPDDATE IS NULL
		AND    P.PATNO = R.PATNO
		AND    R.INPID = I.INPID;

		IF v_NoOfRec > 0 THEN
			O_ERRCODE := -1;
			O_ERRMSG := 'The Patient has a Normal IP registration.';
			GOTO UnlockBed;
		END IF;
	END IF;

	-- Paitent Discharge
	IF v_SDSCODE IS NOT NULL THEN
		UPDATE INPAT
		SET DOCCODE_D = v_DOCCODE,
			INPDDATE = v_INPDDATE,
			SDSCODE = v_SDSCODE,
			RSNCODE = v_SRSNCODE,
			DESCODE = v_DESCODE,
			INPSBCNT = TO_NUMBER(v_STLBRNCOUT)
		WHERE INPID = TO_NUMBER(v_INPID);	
	ELSE
-- DEFAULT Sub-Disease Code to '000' and Code Date to inpddate
		UPDATE INPAT
		SET DOCCODE_D = v_DOCCODE,
			INPDDATE = v_INPDDATE,
			RECVDT = v_INPDDATE,			
			SDSCODE = '000',
			RSNCODE = v_SRSNCODE,
			DESCODE = v_DESCODE,
			INPSBCNT = TO_NUMBER(v_STLBRNCOUT)
		WHERE INPID = TO_NUMBER(v_INPID);	
	END IF;

	IF v_NEWDISCHG = '1' AND v_DISCHGDATE IS NOT NULL THEN
		IF v_UPDALL = '1' THEN
			SELECT R.RegDate INTO v_MRegDate FROM REG R
			WHERE  R.INPID = TO_NUMBER(v_INPID);

			UPDATE REG
			SET    REGMDDATE = v_INPDDATE
			WHERE  REGID IN (
				SELECT REGID_C FROM PATIENT
	  			WHERE  PATNO IN (
	            	SELECT PATNO_B
					FROM MBLINK
					WHERE PATNO_M = v_PATNO
				)
			)
			AND REGNB = -1
			AND TRUNC(RegDate - TO_DATE(TO_CHAR(v_MRegDate, 'dd/mm/yyyy'), 'dd/mm/yyyy')) >= 0;
			
			UPDATE REG_EXTRA
			SET MODIFY_DATE = SYSDATE,
				MODIFY_USER = v_USRID
			WHERE regid IN (
							SELECT REGID
							FROM REG
							WHERE REGID IN (
								SELECT REGID_C FROM PATIENT
					  			WHERE  PATNO IN (
					            	SELECT PATNO_B
									FROM MBLINK
									WHERE PATNO_M = v_PATNO
								)
							)
							AND REGNB = -1
							AND TRUNC(RegDate - TO_DATE(TO_CHAR(v_MRegDate, 'dd/mm/yyyy'), 'dd/mm/yyyy')) >= 0
						);
		ELSE
			UPDATE REG
			SET    REGMDDATE = v_INPDDATE
			WHERE  REGID IN (
				SELECT B_REGID FROM MBLINK
				WHERE  M_REGID = TO_NUMBER(v_regid)
			)
			AND  REGNB = -1 AND REGMDDATE IS NULL;
			
			UPDATE REG_EXTRA
			SET MODIFY_DATE = SYSDATE,
				MODIFY_USER = v_USRID
			WHERE regid IN (
							SELECT REGID
							FROM REG
							WHERE REGID IN (
								SELECT B_REGID FROM MBLINK
								WHERE  M_REGID = TO_NUMBER(v_regid)
							)
							AND  REGNB = -1 AND REGMDDATE IS NULL
						);
		END IF;

		UPDATE BEDHIST
		SET    BHSEDATE = v_INPDDATE
		WHERE  BHSEDATE IS NULL
		AND    REGID = (
			SELECT REGID FROM REG
			WHERE  INPID = TO_NUMBER(v_INPID)
		);

		UPDATE DOCHIST
		SET    DHSEDATE = v_INPDDATE
		WHERE  DHSEDATE IS NULL
		AND    REGID = (
			SELECT REGID FROM REG
			WHERE  INPID = TO_NUMBER(v_INPID)
		);

		UPDATE BED
		SET    BEDSTS = 'F', BEDDDATE = v_INPDDATE
		WHERE  BEDCODE = (
			SELECT BEDCODE FROM INPAT
			WHERE  INPID = TO_NUMBER(v_INPID)
		);
	ELSIF v_DISCHGDATE IS NOT NULL THEN
		IF v_UPDALL = '1' THEN
			SELECT R.RegDate INTO v_MRegDate FROM REG R WHERE R.INPID = TO_NUMBER(v_INPID);

			UPDATE REG
			SET    REGMDDATE = v_INPDDATE
			WHERE  REGID IN (
				SELECT REGID_C FROM PATIENT
				WHERE  PATNO IN (
					SELECT PATNO_B
					FROM MBLINK
					WHERE PATNO_M  = v_PATNO
				)
			)
			AND REGNB = -1
			AND TRUNC(RegDate - TO_DATE(TO_CHAR(v_MRegDate, 'dd/mm/yyyy'), 'dd/mm/yyyy')) >= 0;
			
			UPDATE REG_EXTRA
			SET MODIFY_DATE = SYSDATE,
				MODIFY_USER = v_USRID
			WHERE regid IN (
							SELECT REGID
							FROM REG
							WHERE REGID IN (
								SELECT REGID_C FROM PATIENT
								WHERE  PATNO IN (
									SELECT PATNO_B
									FROM MBLINK
									WHERE PATNO_M  = v_PATNO
								)
							)
							AND REGNB = -1
							AND TRUNC(RegDate - TO_DATE(TO_CHAR(v_MRegDate, 'dd/mm/yyyy'), 'dd/mm/yyyy')) >= 0
						);
		ELSE
			UPDATE REG
			SET    REGMDDATE = v_INPDDATE
			WHERE  REGID IN(
				SELECT B_REGID FROM MBLINK
				WHERE M_REGID = TO_NUMBER(v_REGID)
			)
			AND  REGNB = -1;
			
			UPDATE REG_EXTRA
			SET MODIFY_DATE = SYSDATE,
				MODIFY_USER = v_USRID
			WHERE regid IN (
							SELECT REGID
							FROM REG
							WHERE REGID IN(
								SELECT B_REGID FROM MBLINK
								WHERE M_REGID = TO_NUMBER(v_REGID)
							)
							AND  REGNB = -1
						);
		END IF;

		SELECT MAX(BHSEDATE) INTO v_LASTDISCHARGEDATE
		FROM   BEDHIST
		WHERE  REGID = (
			SELECT REGID FROM REG
			WHERE  INPID = TO_NUMBER(v_INPID)
		);

		IF v_LASTDISCHARGEDATE IS NULL THEN
			UPDATE BEDHIST
			SET    BHSEDATE = TO_DATE(SUBSTR(v_DISCHGDATE, 1, 10), 'dd/mm/yyyy')
			WHERE  BHSEDATE IS NULL
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE  INPID = TO_NUMBER(v_INPID)
			);

			UPDATE DOCHIST
			SET    DHSEDATE = TO_DATE(SUBSTR(v_DISCHGDATE, 1, 10), 'dd/mm/yyyy')
			WHERE  DHSEDATE IS NULL
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE  INPID = TO_NUMBER(v_INPID)
			);
		ELSE
			UPDATE BEDHIST
			SET    BHSEDATE = TO_DATE(SUBSTR(v_DISCHGDATE,1,10), 'dd/mm/yyyy')
			WHERE  TO_CHAR(BHSEDATE, 'dd/mm/yyyy') = TO_CHAR(v_LASTDISCHARGEDATE, 'dd/mm/yyyy')
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE  INPID = TO_NUMBER(v_INPID)
			);

			UPDATE DOCHIST
			SET    DHSEDATE = TO_DATE(SUBSTR(v_DISCHGDATE,1,10), 'dd/mm/yyyy')
			WHERE  TO_CHAR(DHSEDATE, 'dd/mm/yyyy') = TO_CHAR(v_LASTDISCHARGEDATE, 'dd/mm/yyyy')
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE  INPID = TO_NUMBER(v_INPID)
			);
		END IF;
	END IF;

	IF v_DISCHGDATE IS NULL THEN
		SELECT MAX(BHSEDATE) INTO v_LASTDISCHARGEDATE
		FROM   BEDHIST
		WHERE  REGID = (SELECT REGID FROM REG WHERE INPID = TO_NUMBER(v_INPID)) ;

		IF v_LASTDISCHARGEDATE IS NULL THEN
			UPDATE BEDHIST
			SET    BHSEDATE = NULL
			WHERE  BHSEDATE IS NULL
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE INPID = TO_NUMBER(v_INPID)
			);

			UPDATE DOCHIST
			SET    DHSEDATE = NULL
			WHERE  DHSEDATE IS NULL
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE  INPID = TO_NUMBER(v_INPID)
			);
		ELSE
			UPDATE BEDHIST
			SET    BHSEDATE = NULL
			WHERE  TO_CHAR(BHSEDATE, 'dd/mm/yyyy') = TO_CHAR(v_LASTDISCHARGEDATE, 'dd/mm/yyyy')
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE  INPID = TO_NUMBER(v_INPID)
			);

			UPDATE DOCHIST
			SET    DHSEDATE = NULL
			WHERE  TO_CHAR(DHSEDATE, 'dd/mm/yyyy') = TO_CHAR(v_LASTDISCHARGEDATE, 'dd/mm/yyyy')
			AND    REGID = (
				SELECT REGID FROM REG
				WHERE INPID = TO_NUMBER(v_INPID)
			);
		END IF;

		UPDATE BED
		SET BEDSTS = BED_STS_OCCUPY
		WHERE BEDCODE = (
			SELECT B.BEDCODE
			FROM   INPAT I, BED B WHERE I.INPID = TO_NUMBER(v_INPID)
			AND    I.BEDCODE = B.BEDCODE AND B.BEDSTS = 'F'
		);
	END IF;

	-- update death date
	SELECT DEATH INTO v_DEATH FROM PATIENT
	WHERE  PATNO = v_PATNO;

	IF (v_DEATH IS NOT NULL OR UPPER(v_DESCODE) = 'DEATH') AND v_INPDDATE IS NOT NULL THEN
		UPDATE PATIENT
		SET    DEATH = v_INPDDATE
		WHERE  PATNO = v_PATNO;
	END IF;

<<UnlockBed>>
	v_ERRCODE := NHS_ACT_RECORDUNLOCK(v_ACTION, 'Bed', v_BEDCODE, v_COMPUTERNAME, v_USRID, v_ERRMSG);

	RETURN O_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
	o_ERRMSG := SQLERRM || o_ERRMSG;

	RETURN -999;
END NHS_ACT_PATIENTDISCHARGE;
/
