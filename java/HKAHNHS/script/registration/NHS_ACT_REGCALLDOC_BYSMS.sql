CREATE OR REPLACE FUNCTION "NHS_ACT_REGCALLDOC_BYSMS"
	RETURN Types.cursor_type
AS
	outcur Types.cursor_type;
	v_COUNT NUMBER;
	v_REGID NUMBER;
	v_SENDDATE DATE;
	v_CURRDATE VARCHAR2(10);
	v_DOCCODE SCHEDULE.DOCCODE%TYPE;
	v_SCHSDATE SCHEDULE.SCHSDATE%TYPE;
	v_SCHEDATE SCHEDULE.SCHEDATE%TYPE;
BEGIN
	SELECT SYSDATE, TO_CHAR(SYSDATE, 'DD/MM/YYYY') INTO v_SENDDATE, v_CURRDATE FROM DUAL;

	FOR R IN (
		SELECT R.REGID, D.DOCCODE, B.SCHID
		FROM BOOKING B
		INNER JOIN SCHEDULE S ON B.SCHID = S.SCHID
		INNER JOIN DOCTOR D ON S.DOCCODE = D.DOCCODE
		INNER JOIN REG R ON B.BKGID = R.BKGID
		WHERE  B.BKGSDATE >= TO_DATE(v_CURRDATE || ' 00:00:00', 'DD/MM/YYYY HH24:MI:SS')
		AND    B.BKGSDATE <= TO_DATE(v_CURRDATE || ' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
		AND    B.BkgSts = 'F'
		AND    B.SCHID NOT IN (SELECT HPSTATUS FROM HPSTATUS where hptype = 'DOCSMSLOG' AND HPKEY = v_CURRDATE)
		AND    D.SPCCODE NOT IN ('PHYSIO', 'OCCUP', 'PROSORTH', 'SPEECH', 'POD', 'COUNSELING', 'DIETITIAN', 'LIFEMED', 'AUDIO')
		AND    D.DOCCODE NOT IN ('164', '967', '1119', '1528', '395', '1945', '590', '2337', '2355', '2506')
		AND    D.DOCCODE NOT LIKE 'OPD%'
		AND    D.DOCGNAME NOT LIKE '%NURSING%'
		GROUP BY R.REGID, D.DOCCODE, B.SCHID
		ORDER BY R.REGID
	) LOOP
		INSERT INTO HPSTATUS (HPTYPE, HPKEY, HPSTATUS, HPRMK, HPCDATE)
		SELECT 'DOCSMSLOG', v_CURRDATE, R.SCHID, R.DOCCODE, v_SENDDATE
		FROM SCHEDULE
		WHERE  DOCCODE = R.DOCCODE
		AND    SCHSTS = 'N'
		AND    SCHID = R.SCHID
		AND    SCHID NOT IN (SELECT HPSTATUS FROM HPSTATUS where hptype = 'DOCSMSLOG' AND HPKEY = v_CURRDATE AND HPRMK = R.DOCCODE);

		-- handle half hour late schedule
		SELECT SCHSDATE, SCHEDATE INTO v_SCHSDATE, v_SCHEDATE FROM SCHEDULE WHERE SCHID = R.SCHID;

		-- moving backward
		FOR R1 IN (
			SELECT SCHID, SCHSDATE, SCHEDATE
			FROM   SCHEDULE
			WHERE  DOCCODE = R.DOCCODE
			AND    SCHSDATE >= TO_DATE(v_CURRDATE || ' 00:00:00', 'DD/MM/YYYY HH24:MI:SS')
			AND    SCHEDATE <= v_SCHSDATE
			AND    SCHSTS = 'N'
			AND    SCHID NOT IN (SELECT HPSTATUS FROM HPSTATUS where hptype = 'DOCSMSLOG' AND HPKEY = v_CURRDATE AND HPRMK = R.DOCCODE)
			ORDER BY SCHSDATE DESC
		) LOOP
			INSERT INTO HPSTATUS (HPTYPE, HPKEY, HPSTATUS, HPRMK, HPCDATE, HPACTIVE)
			SELECT 'DOCSMSLOG', v_CURRDATE, SCHID, DOCCODE, v_SENDDATE, 0
			FROM   SCHEDULE
			WHERE  DOCCODE = R.DOCCODE
			AND  ((SCHSDATE <= v_SCHSDATE AND SCHEDATE >= v_SCHSDATE - (1 / 1440))
			OR    (SCHSDATE <= v_SCHSDATE - (1 / 48) AND SCHEDATE >= v_SCHSDATE - (1 / 48)))
			AND    SCHSTS = 'N'
			AND    SCHID = R1.SCHID
			AND    SCHID NOT IN (SELECT HPSTATUS FROM HPSTATUS where hptype = 'DOCSMSLOG' AND HPKEY = v_CURRDATE AND HPRMK = R.DOCCODE);

			v_SCHSDATE := R1.SCHSDATE;
		END LOOP;

		-- moving forward
		FOR R2 IN (
			SELECT SCHID, SCHSDATE, SCHEDATE
			FROM   SCHEDULE
			WHERE  DOCCODE = R.DOCCODE
			AND    SCHSDATE >= v_SCHEDATE
			AND    SCHEDATE <= TO_DATE(v_CURRDATE || ' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
			AND    SCHSTS = 'N'
			AND    SCHID NOT IN (SELECT HPSTATUS FROM HPSTATUS where hptype = 'DOCSMSLOG' AND HPKEY = v_CURRDATE AND HPRMK = R.DOCCODE)
			ORDER BY SCHSDATE ASC
		) LOOP
			INSERT INTO HPSTATUS (HPTYPE, HPKEY, HPSTATUS, HPRMK, HPCDATE, HPACTIVE)
			SELECT 'DOCSMSLOG', v_CURRDATE, SCHID, DOCCODE, v_SENDDATE, 0
			FROM   SCHEDULE
			WHERE  DOCCODE = R.DOCCODE
			AND  ((SCHSDATE <= v_SCHEDATE + (1 / 1440) AND SCHEDATE >= v_SCHEDATE)
			OR    (SCHSDATE <= v_SCHEDATE + (1 / 48) AND SCHEDATE >= v_SCHEDATE + (1 / 48)))
			AND    SCHSTS = 'N'
			AND    SCHID = R2.SCHID
			AND    SCHID NOT IN (SELECT HPSTATUS FROM HPSTATUS where hptype = 'DOCSMSLOG' AND HPKEY = v_CURRDATE AND HPRMK = R.DOCCODE);

			v_SCHEDATE := R2.SCHEDATE;
		END LOOP;
	END LOOP;

	OPEN outcur for
		SELECT REPLACE(D.DOCMTEL, ' ', ''), NHS_SMS_PATIENTREGISTRATION('en', H.HPSTATUS), H.HPSTATUS
		FROM HPSTATUS H
		INNER JOIN DOCTOR D ON H.HPRMK = D.DOCCODE
		WHERE  H.HPTYPE = 'DOCSMSLOG'
		AND    H.HPKEY = TO_CHAR(SYSDATE, 'DD/MM/YYYY')
		AND    H.HPCDATE = v_SENDDATE
		AND    H.HPACTIVE = -1;
	RETURN outcur;
END NHS_ACT_REGCALLDOC_BYSMS;
/
