create or replace FUNCTION "NHS_RPT_PATSTATVIEWDC" (
	v_PATNO     IN VARCHAR2,
	v_PATNAME   IN VARCHAR2,
	v_DOCCODE   IN VARCHAR2,
	v_DOCNAME   IN VARCHAR2,
	v_WARD      IN VARCHAR2,
	v_PATIDNO   IN VARCHAR2,
	v_BPBHFDATE IN VARCHAR2,
	v_BPBHTDATE IN VARCHAR2,
	v_BPBTYPE   IN VARCHAR2,
	v_BPBOFDATE IN VARCHAR2,
	v_BPBOTDATE IN VARCHAR2,
	v_DEPS      IN VARCHAR2,
	v_CANCEL    IN VARCHAR2,
	v_OTCASE    IN VARCHAR2,
	v_DECLINE   IN VARCHAR2,
	v_ORDERBY   IN VARCHAR2,
	v_PATCNAME IN VARCHAR2,
  v_BPBREGTYPE IN VARCHAR2
)
	RETURN TYPES.CURSOR_TYPE
--	RETURN VARCHAR2
AS
	OUTCUR TYPES.CURSOR_TYPE;
	SQLSTR VARCHAR2(3000);
BEGIN
	SQLSTR := '
      SELECT DECODE(B.BPBSTS, ''D'', ''C'', ''N'', ''N'') AS BPBSTS,
			B.BPBNO,
			B.PATNO,
			UPPER(B.PATFNAME || '' '' || B.PATGNAME) AS PATNAME,
			B.BPBCNAME AS PATCNAME,
			(SELECT D.DOCFNAME || '' '' || D.DOCGNAME || '' ('' || B.DOCCODE || '')''
				FROM DOCTOR D
				WHERE D.DOCCODE=  B.DOCCODE) AS DOCNAME,
			B.SEX,
			TRUNC(MONTHS_BETWEEN(SYSDATE,
			NVL(P.PATBDATE,
				(SELECT OTABDATE
				FROM OT_APP
				WHERE PBPID = B.PBPID
				AND ROWNUM = 1))) / 12,
				0) AS AGE,
			B.ACMCODE,
			B.WRDCODE,
			TO_CHAR(B.BPBHDATE, ''DD/MM/YYYY HH24:MI:SS'') AS HOSDATE,
			TO_CHAR(B.BPBEDATE, ''DD/MM/YYYY HH24:MI:SS'') AS EDC,
			DECODE(PBE.PBMID, '''', '''', ''0'', ''DEP'', ''DEP'' || PBE.PBMID) as rmk,
			B.PATIDNO,
			decode(FE.OSB_BE,''-1'',''YES'','''') as BE,
			B.BEDCODE,
			TO_CHAR(B.BEDTIME,''DD/MM/YYYY HH24:MI''),
			TO_CHAR(B.BPBODATE,''DD/MM/YYYY HH24:MI'') AS ORDDATE,
			C.USRNAME AS CREATEUSERNAME,
			decode(PBE.ESTGIVN,''-1'',''YES'','''') AS ESTGIVN,      
			B.BPBRMK AS REMARK,
			B.PATKHTEL,
			B.PATPAGER,
			(SELECT P.OTPDESC || '' - '' || P.OTPCODE  || '' (LOS:'' || DECODE(B.ESTSTAYLEN, '''', ''N/A'', B.ESTSTAYLEN) || '')'' FROM OT_PROC P WHERE P.OTPID =
				(SELECT MIN(OTPID) FROM OT_APP X WHERE X.PBPID = B.PBPID AND X.OTAOSDATE =
					(SELECT MIN(A.OTAOSDATE) FROM OT_APP A WHERE A.PBPID = B.PBPID))) AS OTPDESC,
			(SELECT TO_CHAR(MIN(A.OTAOSDATE),''DD/MM/YYYY HH24:MI:SS'') FROM OT_APP A WHERE A.PBPID = B.PBPID) AS OTAOSDATE,
			B.CABLABRMK,
			B.SLPNO,
			D.USRNAME AS EDITUSERNAME,
			TO_CHAR(B.EDITDATE,''DD/MM/YYYY''),
			B.ISREFUSED,
			B.PBPID,
			B.USRID,
			B.EDITUSER,
			B.BPBTYPE,
			B.DOCCODE,
			B.FORDELIVERY,
			B.PATFNAME,
			B.PATGNAME,
			TO_CHAR(B.SMSSENTDT, ''DD/MM/YYYY HH24:MI:SS''),
			TO_CHAR(B.EMAILSENTDT, ''DD/MM/YYYY HH24:MI:SS''),
			B.ESTSTAYLEN,
			(SELECT P.PKGCODE
				FROM OT_PROC P
				WHERE P.OTPID = (SELECT MIN(OTPID)
				FROM OT_APP X
				WHERE X.PBPID = B.PBPID)) AS PKGCODE
		FROM BEDPREBOK B
		LEFT JOIN USR C ON C.USRID = B.USRID
		LEFT JOIN USR D ON D.USRID = B.EDITUSER
		LEFT JOIN PATIENT P ON B.PATNO = P.PATNO
		LEFT JOIN BEDPREBOK_EXTRA PBE ON B.PBPID = PBE.PBPID
		LEFT JOIN FIN_EST_HOSP FE ON B.PBPID = FE.PBPID
		WHERE 1 = 1 ';
	IF v_PATNO IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.PATNO = ''' || v_PATNO || '''';
	END IF;

	IF v_DOCCODE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.DOCCODE = ''' || v_DOCCODE || '''';
	END IF;

	IF v_PATCNAME IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.BPBCNAME LIKE ''' || v_PATCNAME || '%''';
	END IF;

	IF v_PATNAME IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.PATFNAME || '' '' || B.PATGNAME LIKE ''' || v_PATNAME || '%''';
	END IF;

	IF v_DOCNAME IS NOT NULL THEN
		IF INSTR(v_DOCNAME, '%') > 0 THEN
			SQLSTR := SQLSTR || ' AND B.DOCCODE IN (SELECT DOCCODE FROM Doctor WHERE DOCFNAME || '' '' || DOCGNAME LIKE ''' || v_DOCNAME || ''')';
		ELSE
			SQLSTR := SQLSTR || ' AND B.DOCCODE IN (SELECT DOCCODE FROM Doctor WHERE DOCFNAME || '' '' || DOCGNAME = ''' || v_DOCNAME || ''')';
		END IF;
	END IF;

	IF v_WARD IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.WRDCODE = ''' || v_WARD || '''';
	END IF;

	IF v_PATIDNO IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND UPPER(B.PATidno) LIKE ''' || v_PATIDNO || '%''';
	END IF;

	IF v_BPBHFDATE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND TRUNC(B.BPBHDATE) >= TO_DATE(''' || v_BPBHFDATE || ''', ''dd/mm/yyyy'')';
	END IF;

	IF v_BPBHTDATE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND TRUNC(B.BPBHDATE) <= TO_DATE(''' || v_BPBHTDATE || ''', ''dd/mm/yyyy'')';
	END IF;

	IF v_BPBTYPE = 'W' THEN
		SQLSTR := SQLSTR || ' AND B.bpbtype= ''W''';
	ELSIF v_BPBTYPE = 'B' THEN
		SQLSTR := SQLSTR || ' AND B.bpbtype= ''B''';
	END IF;

	IF v_BPBOFDATE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND TRUNC(B.BPBODATE) >= TO_DATE(''' || v_BPBOFDATE || ''', ''dd/mm/yyyy'')';
	END IF;

	IF v_BPBOTDATE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND TRUNC(B.BPBODATE) <= TO_DATE(''' || v_BPBOTDATE || ''', ''dd/mm/yyyy'')';
	END IF;

	IF v_DEPS = 'N' THEN
		SQLSTR := SQLSTR || ' AND B.Slpno IS NULL';
	ELSIF v_DEPS = 'P' THEN
		SQLSTR := SQLSTR || ' AND B.Slpno IS NOT NULL';
	END IF;

	IF v_CANCEL = 'N' THEN
		SQLSTR := SQLSTR || ' AND B.bpbsts in (''N'')';
	ELSIF v_CANCEL = 'S' THEN
		SQLSTR := SQLSTR || ' AND B.bpbsts in (''D'')';
	END IF;

	IF v_OTCASE = 'N' THEN
		SQLSTR := SQLSTR || ' AND B.pbpid IS NULL';
	ELSIF v_OTCASE = 'S' THEN
		SQLSTR := SQLSTR || ' AND (B.pbpid in (select pbpid from ot_app))';
	END IF;

	IF v_DECLINE = 'S' THEN
		SQLSTR := SQLSTR || ' AND nvl(B.isrefused,0) = -1';
	ELSIF v_DECLINE = 'N' THEN
		SQLSTR := SQLSTR || ' AND nvl(B.isrefused,0) = 0 ';
	END IF;
  
	IF v_BPBREGTYPE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND PBE.BPBREGTYPE = ''' || v_BPBREGTYPE || '''';
	END IF;  

	IF v_ORDERBY = 'PN' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.PATNO';
	ELSIF v_ORDERBY = 'NA' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.BPBPNAME';
	ELSIF v_ORDERBY = 'CN' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.BPBCNAME';
	ELSIF v_ORDERBY = 'DN' THEN
		SQLSTR := SQLSTR || ' ORDER BY DOCNAME, HOSDATE, B.BPBPNAME';
	ELSIF v_ORDERBY = 'WD' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.WRDCODE, HOSDATE, B.BPBPNAME';
	ELSIF v_ORDERBY = 'SD' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.BPBHDATE, B.BPBPNAME';
	ELSIF v_ORDERBY = 'DM' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.patidno';
	ELSIF v_ORDERBY = 'BN' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.BPBNO';
	ELSIF v_ORDERBY = 'CL' THEN
		SQLSTR := SQLSTR || ' ORDER BY B.ACMCODE';
	ELSIF V_Orderby = 'BE' Then
		SQLSTR := SQLSTR || ' ORDER BY BE';
	ELSE
		SQLSTR := SQLSTR || ' ORDER BY B.bpbtype, HOSDATE';
	End If;

	OPEN OUTCUR FOR SQLSTR;
	RETURN OUTCUR;
--RETURN SQLSTR;
END NHS_RPT_PATSTATVIEWDC;
/