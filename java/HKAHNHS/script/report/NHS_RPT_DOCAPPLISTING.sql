create or replace FUNCTION "NHS_RPT_DOCAPPLISTING" (
	v_BKGSDATE IN VARCHAR2,
	v_BKGEDATE IN VARCHAR2,
	v_DOCCODE  IN VARCHAR2
)
	RETURN TYPES.CURSOR_TYPE
AS
	OUTCUR TYPES.CURSOR_TYPE;
	SQLSTR  VARCHAR2(5000);
BEGIN
	SQLSTR := 'SELECT /*+ NO_MERGE */
					/*+ INDEX( B IDX_BOOKING_BKGSDATE P IDX_PATIENT_10 ) ORDERED USE_NL(B, S, D) */
				  TO_CHAR(B.BKGSDATE, ''DD/MM/YYYY HH24:MI'') || '' - ''||TO_CHAR(B.BKGEDATE, ''HH24:MI'') as BKGDATE,
          D.DOCFNAME ||'' '' ||D.DOCGNAME AS DOCNAME,
				  B.PATNO,
				  PE.DENTALNO,
				  B.BKGPNAME,
				  TO_CHAR(P.PATBDATE,''dd/MON/YYYY'',''NLS_DATE_LANGUAGE=AMERICAN''),
				  B.BKGMTEL,
          		  B.BKGRMK
				FROM BOOKING B
				LEFT JOIN BOOKING_EXTRA BE ON B.BKGID = BE.BKGID
				LEFT JOIN PATIENT P ON B.PATNO = P.PATNO
				LEFT JOIN PATIENT_EXTRA PE ON B.PATNO = PE.PATNO
				INNER JOIN SCHEDULE S ON B.SCHID = S.SCHID ';

	IF v_DOCCODE IS NOT NULL THEN
			SQLSTR := SQLSTR || ' INNER JOIN DOCTOR D ON S.DOCCODE = D.DOCCODE AND D.DOCCODE = ''' || v_DOCCODE || ''' ';
	ELSE
		SQLSTR := SQLSTR || ' LEFT JOIN DOCTOR D ON S.DOCCODE = D.DOCCODE ';
	END IF;

	SQLSTR := SQLSTR || ' WHERE B.STECODE = '''|| GET_CURRENT_STECODE || '''';

	IF v_BKGSDATE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.BKGSDATE >= TO_DATE(''' || v_BKGSDATE || ' 00:00:00'', ''DD/MM/YYYY HH24:MI:SS'')';
	END IF;

	IF v_BKGEDATE IS NOT NULL THEN
		SQLSTR := SQLSTR || ' AND B.BKGEDATE <= TO_DATE(''' || v_BKGEDATE || ' 23:59:59'', ''DD/MM/YYYY HH24:MI:SS'')';
	END IF;

		SQLSTR := SQLSTR || ' AND BKGSTS = ''N''';

		Sqlstr := Sqlstr || ' ORDER BY B.BKGSDATE ';
  DBMS_OUTPUT.PUT_LINE(SQLSTR);
	OPEN OUTCUR FOR SQLSTR;

	RETURN OUTCUR;
END NHS_RPT_DOCAPPLISTING;
/
