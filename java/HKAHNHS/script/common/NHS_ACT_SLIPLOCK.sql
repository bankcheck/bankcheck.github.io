CREATE OR REPLACE FUNCTION "NHS_ACT_SLIPLOCK" (
	I_ACTION       IN VARCHAR2,
	I_SLPNOS       IN VARCHAR2,
	I_LOCKTYPE     IN VARCHAR2,
	I_COMPUTERNAME IN VARCHAR2,
	I_USRID        IN VARCHAR2,
	O_ERRMSG       OUT VARCHAR2
)
	RETURN NUMBER
AS
	O_ERRCODE NUMBER;
	V_SLPSTS  SLIP.SLPSTS%Type;
BEGIN
	O_ERRCODE := 0;

	FOR SLIPS IN (
		SELECT REGEXP_SUBSTR(I_SLPNOS, '[^,]+', 1, LEVEL) AS SLIP, ROWNUM
		FROM DUAL
		CONNECT BY REGEXP_SUBSTR(I_SLPNOS, '[^,]+', 1, LEVEL) IS NOT NULL)
	LOOP
		IF LENGTH(TRIM(SLIPS.SLIP)) > 0 THEN
			O_ERRCODE := NHS_ACT_RECORDLOCK(I_ACTION, I_LOCKTYPE, TRIM(SLIPS.SLIP), I_COMPUTERNAME, I_USRID, O_ERRMSG);

			IF O_ERRCODE <> 0 THEN
				SELECT SLPSTS INTO V_SLPSTS
				FROM SLIP
				WHERE SLPNO = TRIM(SLIPS.SLIP);

				IF V_SLPSTS <> 'C' THEN
					O_ERRMSG := 'Unable to lock the slip: ' || SLIPS.SLIP;

					IF SLIPS.ROWNUM > 1 THEN
						--slip unlock
						O_ERRCODE := NHS_ACT_SLIPUNLOCK(I_ACTION, I_SLPNOS, I_LOCKTYPE, I_COMPUTERNAME, I_USRID, O_ERRMSG);
					END IF;
					O_ERRCODE := -1;
					O_ERRMSG := 'Unable to lock the slip: ' || SLIPS.SLIP;

					EXIT;
				END IF;
			END IF;
		END IF;
	END LOOP;

	RETURN O_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
	o_ERRMSG := SQLERRM || o_ERRMSG;

	return -999;
END NHS_ACT_SLIPLOCK;
/
