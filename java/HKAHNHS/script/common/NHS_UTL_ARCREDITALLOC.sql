-- CreditAllocation @ AR.bas
CREATE OR REPLACE FUNCTION "NHS_UTL_ARCREDITALLOC" (
	i_atxid IN VARCHAR2,
	i_arpid IN varchar2,
	i_amount IN NUMBER,
	i_ATXTDATE IN DATE DEFAULT NULL,
	i_ATXCDATE IN DATE DEFAULT NULL
)
	RETURN NUMBER
AS
	O_ERRCODE NUMBER;
	v_ATXID ARTX.ATXID%TYPE;
	v_ARCCODE ARTX.ARCCODE%TYPE;
	v_PATNO ARTX.PATNO%TYPE;
	v_SLPNO ARTX.SLPNO%TYPE;
	v_ATXAMT ARTX.ATXAMT%TYPE;
	v_atxsamt ARTX.atxsamt%TYPE;
	v_atxtdate ARTX.atxtdate%TYPE;
	v_ATXCDATE ARTX.ATXCDATE%TYPE;
	v_ATXDESC ARTX.ATXDESC%TYPE;
	v_ATXTTYPE ARTX.ATXTTYPE%TYPE;
	v_ATXREFID ARTX.ATXREFID%TYPE;
	v_ATXSTS ARTX.ATXSTS%TYPE;
	v_ARPID ARTX.ARPID%TYPE;
	v_USRID ARTX.USRID%TYPE;
BEGIN
	o_errcode := 0;
	SELECT
		ATXID,
		ARCCODE,
		PATNO,
		SLPNO,
		ATXAMT,
		ATXSAMT,
		ATXTDATE,
		ATXCDATE,
		ATXDESC,
		ATXTTYPE,
		ATXREFID,
		ATXSTS,
		ARPID,
		USRID
	INTO
		v_ATXID,
		v_ARCCODE,
		v_PATNO,
		v_SLPNO,
		v_ATXAMT,
		v_ATXSAMT,
		v_ATXTDATE,
		v_ATXCDATE,
		v_ATXDESC,
		v_ATXTTYPE,
		v_ATXREFID,
		v_ATXSTS,
		v_ARPID,
		v_USRID
	FROM ArTx
	WHERE AtxID = i_ATXID;

	IF i_ATXTDATE IS NULL THEN
		v_atxtdate := SYSDATE;
	END IF;

	IF i_ATXCDATE IS NULL THEN
		v_ATXCDATE := SYSDATE;
	END IF;

	INSERT INTO ArTx (
		ATXID,
		ARCCODE,
		PATNO,
		SLPNO,
		ATXAMT,
		ATXSAMT,
		ATXTDATE,
		ATXCDATE,
		ATXDESC,
		ATXTTYPE,
		ATXREFID,
		ATXSTS,
		ARPID,
		USRID
	) VALUES (
		SEQ_ARTX.NEXTVAL,
		v_ARCCODE,
		v_PATNO,
		v_slpno,
		-i_Amount,
		-i_Amount,
		v_ATXTDATE,
		v_ATXCDATE,
		v_ATXDESC,
		v_ATXTTYPE,
		i_ATXID,
		v_ATXSTS,
		i_arpid,
		v_USRID
	);

	-- Update ArpTx Record
	UPDATE ARPTX SET ARPAAMT = ARPAAMT + i_Amount WHERE ARPID = i_arpid;

	-- Update ArTx Record
	UPDATE ArTx SET AtxSAmt = AtxSAmt + i_Amount WHERE AtxID = i_ATXID;

	UPDATE arcode SET arcamt = arcamt + -i_amount, arcuamt = arcuamt + i_amount WHERE arccode = v_arccode;

	RETURN O_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	o_errcode := -1;
	RETURN o_errcode;
END NHS_UTL_ARCREDITALLOC;
/
