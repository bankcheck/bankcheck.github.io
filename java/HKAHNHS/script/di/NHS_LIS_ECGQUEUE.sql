create or replace FUNCTION NHS_LIS_ECGQUEUE (
	REMOVED IN VARCHAR2,
    ECGQUEUEFROM IN VARCHAR2,
    ECGQUEUETO IN VARCHAR2
)
	RETURN Types.cursor_type
    --RETURN VARCHAR2
AS
	OUTCUR types.cursor_type;

	SQLSTR VARCHAR2(5000);
	SQLSTR1 VARCHAR2(5000);
	SQLSTR2 VARCHAR2(5000);
    WHERESQL VARCHAR2(5000);
    
BEGIN
    SQLSTR1 := 'SELECT J.XJBNO, DECODE(P.PMCID, NULL, NULL, 0, NULL, ''M'') MERGED, P.PATNO, P.PATFNAME || '' '' || P.PATGNAME AS PATNAME,
                J.DOCCODE, TX.STNDESC || '' '' || TX .STNDESC1 AS STNDEDSE, R.XRGDATE, J.XJBTLOC, J.XJBTLOCDESC, R.XRGID
                FROM XJOB J, XREG R, PATIENT P, SLIPTX TX ';
    
    SQLSTR2 := 'SELECT J.XJBNO, null Merged, P.ORPNO AS PATNO, P.ORPFNAME || '' '' || P.ORPGNAME AS PATNAME,
                J.DOCCODE, TX.STNDESC || '' '' || TX .STNDESC1 AS STNDEDSE, R.XRGDATE, J.XJBTLOC, J.XJBTLOCDESC, R.XRGID
                FROM XJOB J, XREG R, OUTREFPAT P, SLIPTX TX ';

    WHERESQL := '
            WHERE J.XJBNO = R.XJBNO
            AND R.STNID = TX.STNID
            AND R.XRGECG  = ''-1'' 
            AND R.XRGSTS = ''N''
            AND R.XRGECGFLAG = ''' || REMOVED || ''' 
            AND R.XRGDATE >= TO_DATE(''' || ECGQUEUEFROM || ' 00:00:00'', ''DD/MM/YYYY HH24:MI:SS'')
            AND R.XRGDATE < TO_DATE(''' || ECGQUEUETO || ' 23:59:59'', ''DD/MM/YYYY HH24:MI:SS'') ';
    
    SQLSTR :=   SQLSTR1 || WHERESQL || 
                'AND J.PATNO = P.PATNO
                UNION ALL ' ||
                SQLSTR2 || WHERESQL || 
                'AND J.PATNO = P.ORPNO 
                ORDER BY PATNO, XJBNO ';
    
OPEN OUTCUR FOR SQLSTR;
RETURN OUTCUR;
--RETURN SQLSTR;
END NHS_LIS_ECGQUEUE;