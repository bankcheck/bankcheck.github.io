CREATE OR REPLACE FUNCTION NHS_ACT_MRTRANSFER (
	i_ACTION  IN VARCHAR2,
	i_MRHID   IN MEDRECDTL.MRHID%TYPE,
	i_MRDSTS  IN MEDRECDTL.MRDSTS%TYPE,
	i_USERID  IN MEDRECDTL.USRID%TYPE,
	i_MRLID_S IN MEDRECDTL.MRLID_S%TYPE,
	i_MRLID_L IN MEDRECDTL.MRLID_L%TYPE,
	i_DOCCODE IN VARCHAR2,
	i_REQBY   IN VARCHAR2,
	i_PURPOSE IN VARCHAR2,
	o_ERRMSG  OUT VARCHAR2
)
	RETURN NUMBER
AS
	O_ERRCODE NUMBER;
	v_COUNT NUMBER;
	v_MRDID NUMBER;
	v_DOCCODE MEDRECDTL.DOCCODE%TYPE;
	v_MRDRMK MEDRECDTL.MRDRMK%TYPE;
BEGIN
	o_errcode := -1;
	o_ERRMSG := 'OK';

	IF i_DOCCODE IS NOT NULL THEN
		SELECT COUNT(1) INTO v_COUNT FROM DOCTOR WHERE DOCCODE = i_DOCCODE;
		IF v_COUNT = 1 THEN
			v_DOCCODE := i_DOCCODE;
		ELSE
			v_MRDRMK := i_REQBY;
		END IF;
	END IF;

	IF i_PURPOSE IS NOT NULL THEN
		IF v_MRDRMK IS NOT NULL THEN
			v_MRDRMK := v_MRDRMK || ' (' || i_PURPOSE || ')';
		ELSE
			v_MRDRMK := i_PURPOSE;
		END IF;
	END IF;

	SELECT SEQ_MEDRECDTL.NEXTVAL INTO v_MRDID FROM DUAL;

	UPDATE MEDRECHDR
	SET MRDID = v_MRDID
	WHERE MRHID = i_MRHID;

	INSERT INTO MEDRECDTL(MRDID, MRHID, MRDDDATE, MRDSTS, USRID, MRLID_S, MRLID_L, DOCCODE, MRDRMK)
	VALUES (v_MRDID, i_MRHID, SYSDATE, i_MRDSTS, i_USERID, i_MRLID_S, i_MRLID_L, v_DOCCODE, v_MRDRMK);

	o_errcode := 0;

	RETURN O_ERRCODE;
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	dbms_output.put_line('An ERROR was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);

	RETURN -1;
END NHS_ACT_MRTRANSFER;
/
